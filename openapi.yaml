openapi: 3.0.0
info:
  description: Raidiam Trust Services API
  license:
    name: MIT
    url: https://mit-license.org
  title: Raidiam Connect Trust Framework.
  version: "1.3"
servers:
  - url: https://matls-api.directory.openbankingbrasil.org.br
    description: Directory Production
  - url:  https://matls-api.sandbox.directory.openbankingbrasil.org.br
    description: Directory Sandbox

paths:
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server by Id
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServer'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/softwarestatements':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get all software statements for the given organisation
      tags:
        - Software Statements for an Organisation
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatements'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/users/{UserEmailId}':
    get:
      parameters:
        - $ref: '#/components/parameters/UserEmailId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Details of the user
      tags:
        - Users
      responses:
        '200':
          $ref: '#/components/responses/UserDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
  '/references/authorities':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Reference Data of all authorities
      tags:
        - References - Authority
      responses:
        '200':
          $ref: '#/components/responses/Authorities'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authorisationdomains/{AuthorisationDomainName}':
    parameters:
      - $ref: '#/components/parameters/AuthorisationDomainName'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation domain by Name
      tags:
        - References - Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates/{SoftwareStatementCertificateOrKeyType}/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/SoftwareStatementCertificateOrKeyType'
      - $ref: '#/components/parameters/CertificateOrKeyId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the certificate of the given type and ID for the given software statement
      tags:
        - Software Statement Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/ess/poll/{ExternalSigningServiceEnvelopeId}':
    get:
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/ExternalSigningServiceEnvelopeId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Polls the ESS to get the latest status of the signing request
      tags:
        - Organisations
      responses:
        '200':
          $ref: '#/components/responses/EssPollResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a software statement
      tags:
        - Software Statements for an Organisation
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatement'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/contacts/{ContactId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/ContactId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a contact by Id
      tags:
        - Contacts
      responses:
        '200':
          $ref: '#/components/responses/Contact'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorityclaims':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the authority claims for the given organisation
      tags:
        - Organisation Authority Claims
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaims'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}/apidiscoveryendpoints':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/ApiResourceId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get all Api Discovery Endpoints for the given Authorisation Server and Api Version
      tags:
        - Authorisation Servers - API Discovery Endpoints
      responses:
        '200':
          $ref: '#/components/responses/ApiDiscoveryEndpoints'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authorities/{AuthorityId}/authorisationdomains':
    parameters:
      - $ref: '#/components/parameters/AuthorityId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Reference data of all authorisation domains for an Authority ID
      tags:
        - References - Authority Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomainsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/termsandconditions':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: All terms and conditions
      tags:
        - References - Terms and Conditions
      responses:
        '200':
          $ref: '#/components/responses/TermsAndConditionsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authorisationdomains':
    parameters:
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Reference data of all authorisation domains
      tags:
        - References - Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authoritydomainclaims/{OrganisationAuthorityDomainClaimId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationAuthorityDomainClaimId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority domain claim by Id
      tags:
        - Organisation Authority Domain Claims
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityDomainClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/authorityclaims/{SoftwareAuthorityClaimId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/SoftwareAuthorityClaimId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority claim by Id
      tags:
        - Software Statement Authority Claims
      responses:
        '200':
          $ref: '#/components/responses/SoftwareAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/metadata':
    get:
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: Get all metadata of a specific type
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/SoftwareStatementId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get all metadata associated with a software statement
      tags:
        - Software Statement - Metadata
      responses:
        '200':
          $ref: '#/components/responses/MetadataList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:software
          - directory:website
  '/users/certification':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: All certification managers
      tags:
        - Certification Managers
      responses:
        '200':
          $ref: '#/components/responses/CertificationManagers'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:admin
  '/users/super':
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: All super users
      tags:
        - Super Users
      responses:
        '200':
          $ref: '#/components/responses/SuperUsers'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:admin
  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users/{UserEmailId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationDomainName'
      - $ref: '#/components/parameters/UserEmailId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Authorisation Domain user details
      tags:
        - Organisation Domain Users
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUsersPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/termsandconditions/{TnCId}':
    get:
      parameters:
        - $ref: '#/components/parameters/TnCId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get details for a TnC document
      tags:
        - References - Terms and Conditions
      responses:
        '200':
          $ref: '#/components/responses/TermsAndConditionsItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/assertion':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a Software Statement Assertion for the given SoftwareStatementID.
      tags:
        - Software Statement Assertions
      responses:
        '200':
          $ref: '#/components/responses/SoftwareStatementAssertion'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/certificates/{OrganisationCertificateType}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationCertificateType'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get the certificates of the given OrganisationCertificateType for the given organisation
      tags:
        - Organisation Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeys'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/adminusers':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: All admin users for the given organisation
      tags:
        - Organisation Admin Users
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAdminUsers'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
  '/users/{UserEmailId}/history':
    get:
      parameters:
        - $ref: '#/components/parameters/UserEmailId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: TnC history of the user
      tags:
        - Users
      responses:
        '200':
          $ref: '#/components/responses/UserTermsAndConditionsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get all Api Resources for the given Authorisation Server
      tags:
        - Authorisation Servers - API Resources
      responses:
        '200':
          $ref: '#/components/responses/ApiResources'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/certifications':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get all certifications for given authorisation server.
      tags:
        - Authorisation Server Certifications
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServerCertifications'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/certifications/{AuthorisationServerCertificationId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/AuthorisationServerCertificationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a certification by Id
      tags:
        - Authorisation Server Certifications
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServerCertification'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}':
    parameters:
      - $ref: '#/components/parameters/AuthorisationDomainRoleName'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation domain role by Name
      tags:
        - References - Authorisation Domain Role
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainRole'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}/authorisations/{OrganisationAuthorisationId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
      - $ref: '#/components/parameters/OrganisationAuthorisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a claim authorisation
      tags:
        - Organisation Authority Claims Authorisations
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisation'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authoritydomainmapping':
    parameters:
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Mappings of authorities with authorisation domains
      tags:
        - References - Authority Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomainsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations':
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
        - in: query
          name: displayMine
          schema:
            type: string
          description: Set to an email value to instruct the backend to only return organisations related to the user
        - in: query
          name: filterBy
          schema:
            type: string
          description: Will return organisations with data like the provided value
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get all organisations that the logged in user is authorised to retrieve from trusted  services.
      tags:
        - Organisations
      responses:
        '200':
          $ref: '#/components/responses/OrganisationsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/tnchistory':
    get:
      parameters:
        - $ref: '#/components/parameters/OrganisationId'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get all TnC data of the given organisation
      tags:
        - Organisations
      responses:
        '200':
          $ref: '#/components/responses/OrgTermsAndConditionsPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/ApiResourceId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server API resource by Id
      tags:
        - Authorisation Servers - API Resources
      responses:
        '200':
          $ref: '#/components/responses/ApiResource'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/authorityclaims':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the authority claims for the given software statement
      tags:
        - Software Statement Authority Claims
      responses:
        '200':
          $ref: '#/components/responses/SoftwareAuthorityClaims'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/softwarestatements/{SoftwareStatementId}/certificates':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/SoftwareStatementId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get certificates for the given software statement
      tags:
        - Software Statement Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeys'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the given organisation's details
      tags:
        - Organisations
      responses:
        '200':
          $ref: '#/components/responses/OrganisationWithTnc'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}/metadata':
    get:
      parameters:
        - in: query
          name: type
          schema:
            type: string
          description: Get all of a specific type of metadata
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get metadata associated with an authorisation domain role
      tags:
        - References - Authorisation Domain Role Metadata
      responses:
        '200':
          $ref: '#/components/responses/MetadataList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:software
          - directory:website
  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority claim by Id
      tags:
        - Organisation Authority Claims
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaim'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authorisationdomainroles/{AuthorisationDomainRoleName}/metadata/{MetadataId}':
    get:
      parameters:
        - $ref: '#/components/parameters/MetadataId'
        - $ref: '#/components/parameters/AuthorisationDomainRoleName'
        - $ref: '#/components/parameters/x-fapi-auth-date'
        - $ref: '#/components/parameters/x-fapi-customer-ip-address'
        - $ref: '#/components/parameters/x-fapi-interaction-id'
        - $ref: '#/components/parameters/x-customer-user-agent'
      summary: Get metadata associated with an authorisation domain role
      tags:
        - References - Authorisation Domain Role Metadata
      responses:
        '200':
          $ref: '#/components/responses/Metadata'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:software
          - directory:website
  '/organisations/{OrganisationId}/authorityclaims/{OrganisationAuthorityClaimId}/authorisations':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/OrganisationAuthorityClaimId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority claims' authorisations
      tags:
        - Organisation Authority Claims Authorisations
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityClaimAuthorisations'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorisationservers':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get all Authorisation Servers for the given organisation
      tags:
        - Authorisation Servers
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationServers'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authorities/{AuthorityId}':
    parameters:
      - $ref: '#/components/parameters/AuthorityId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get a reference authority by Id
      tags:
        - References - Authority
      responses:
        '200':
          $ref: '#/components/responses/Authority'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/references/authorisationdomainroles':
    parameters:
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Reference data of all authorisation domain roles
      tags:
        - References - Authorisation Domain Role
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainRolesPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/familystatus':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/ApiResourceId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server API resource by Id and returns the latest family status
      tags:
        - Authorisation Servers - API Resources
      responses:
        '200':
          $ref: '#/components/responses/ApiResources'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/certificates':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get the certificates for the given organisation
      tags:
        - Organisation Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKeys'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/adminusers/{UserEmailId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/UserEmailId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Gets details of an organisation admin user by their email address
      tags:
        - Organisation Admin Users
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAdminUser'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
  '/references/authorities/{AuthorityId}/authorisationdomains/{AuthorityAuthorisationDomainId}':
    parameters:
      - $ref: '#/components/parameters/AuthorityId'
      - $ref: '#/components/parameters/AuthorityAuthorisationDomainId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authority authorisation domain by Id
      tags:
        - References - Authority Authorisation Domain
      responses:
        '200':
          $ref: '#/components/responses/AuthorityAuthorisationDomain'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/contacts':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get the contacts for the given organisation
      tags:
        - Contacts
      responses:
        '200':
          $ref: '#/components/responses/ContactsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authoritydomainclaims':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: Get the authority domain claims for the given organisation
      tags:
        - Organisation Authority Domain Claims
      responses:
        '200':
          $ref: '#/components/responses/OrganisationAuthorityDomainClaimsPage'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/authorisationservers/{AuthorisationServerId}/apiresources/{ApiResourceId}/apidiscoveryendpoints/{ApiDiscoveryEndpointId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationServerId'
      - $ref: '#/components/parameters/ApiResourceId'
      - $ref: '#/components/parameters/ApiDiscoveryEndpointId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Get an authorisation server API discovery endpoint by Id
      tags:
        - Authorisation Servers - API Discovery Endpoints
      responses:
        '200':
          $ref: '#/components/responses/ApiDiscoveryEndpoint'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/certificates/kid/{CertificateOrKeyId}':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/CertificateOrKeyId'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      summary: Retrieve a certificate with the given CertificateOrKeyId
      tags:
        - Organisation Certificates
      responses:
        '200':
          $ref: '#/components/responses/CertificatesOrKey'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
  '/organisations/{OrganisationId}/{AuthorisationDomainName}/users':
    parameters:
      - $ref: '#/components/parameters/OrganisationId'
      - $ref: '#/components/parameters/AuthorisationDomainName'
      - $ref: '#/components/parameters/x-fapi-auth-date'
      - $ref: '#/components/parameters/x-fapi-customer-ip-address'
      - $ref: '#/components/parameters/x-fapi-interaction-id'
      - $ref: '#/components/parameters/x-customer-user-agent'
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          description: The page number to return of the result set
        - in: query
          name: size
          schema:
            type: integer
          description: The size of the pages to return
        - in: query
          name: sort
          schema:
            type: string
          description: The field name to sort
      summary: All users for the given authorisation domain
      tags:
        - Organisation Domain Users
      responses:
        '200':
          $ref: '#/components/responses/AuthorisationDomainUsersPage'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '502':
          $ref: '#/components/responses/BadGateway'
        '504':
          $ref: '#/components/responses/UpstreamTimeout'
      security:
        - authorizer: []
        - oAuth:
          - directory:website
          - directory:software
components:
  parameters:
    ApiDiscoveryEndpointId:
      description: The api discovery endpoint Id
      in: path
      name: ApiDiscoveryEndpointId
      required: true
      schema:
        $ref: '#/components/schemas/ApiDiscoveryEndpointId'
    ApiResourceId:
      description: The api version Id
      in: path
      name: ApiResourceId
      required: true
      schema:
        $ref: '#/components/schemas/ApiResourceId'
    AuthorisationDomainName:
      description: Authorisation Domain Name. Eg:PSD2
      in: path
      name: AuthorisationDomainName
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationDomainName'
    AuthorisationDomainRoleName:
      description: Authorisation Domain Role Name. Eg:TPP
      in: path
      name: AuthorisationDomainRoleName
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationDomainRoleName'
    AuthorisationDomainUserId:
      description: Unique record Id to identify Domain User
      in: path
      name: AuthorisationDomainUserId
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationDomainUserId'
    AuthorisationServerCertificationId:
      description: Auth server certification Id
      in: path
      name: AuthorisationServerCertificationId
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationServerCertificationId'
    AuthorisationServerId:
      description: The authorisation server Id
      in: path
      name: AuthorisationServerId
      required: true
      schema:
        $ref: '#/components/schemas/AuthorisationServerId'
    AuthorityAuthorisationDomainId:
      description: ID of the Authority mapped with Authorisation Domain
      in: path
      name: AuthorityAuthorisationDomainId
      required: true
      schema:
        $ref: '#/components/schemas/AuthorityAuthorisationDomainId'
    AuthorityId:
      description: The reference authority Id
      in: path
      name: AuthorityId
      required: true
      schema:
        $ref: '#/components/schemas/AuthorityId'
    CertificateOrKeyId:
      description: The certificate or key Id
      in: path
      name: CertificateOrKeyId
      required: true
      schema:
        $ref: '#/components/schemas/CertificateOrKeyId'
    ClientId:
      description: Oauth clientId
      in: path
      name: ClientId
      required: true
      schema:
        $ref: '#/components/schemas/ClientCreationResponse/properties/client_id'
    ContactId:
      description: The contact id
      in: path
      name: ContactId
      required: true
      schema:
        $ref: '#/components/schemas/ContactId'
    ExternalSigningServiceEnvelopeId:
      description: The envelope id
      in: path
      name: ExternalSigningServiceEnvelopeId
      required: true
      schema:
        $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'
    MetadataId:
      description: The metadata id object
      in: path
      name: MetadataId
      required: true
      schema:
        $ref: '#/components/schemas/MetadataId'
    OrganisationAuthorisationId:
      description: The authorisation ID for an organisation's authority claims
      in: path
      name: OrganisationAuthorisationId
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAuthorisationId'
    OrganisationAuthorityClaimId:
      description: The Authority claims ID for an organisation
      in: path
      name: OrganisationAuthorityClaimId
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAuthorityClaimId'
    OrganisationAuthorityDomainClaimId:
      description: Organisation Authority Domain Claim Id
      in: path
      name: OrganisationAuthorityDomainClaimId
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationAuthorityDomainClaimId'
    OrganisationCertificateType:
      description: The certificate type
      in: path
      name: OrganisationCertificateType
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationCertificateType'
    OrganisationId:
      description: The organisation ID
      in: path
      name: OrganisationId
      required: true
      schema:
        $ref: '#/components/schemas/OrganisationId'
    PageableRequest:
      description: The pageable object
      in: query
      name: PageableRequest
      schema:
        $ref: '#/components/schemas/PageableRequest'
    SoftwareAuthorityClaimId:
      description: The software statement's authority claim ID
      in: path
      name: SoftwareAuthorityClaimId
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareAuthorityClaimId'
    SoftwareStatementCertificateOrKeyType:
      description: The certificate or key type that can be associated with a software
        statement
      in: path
      name: SoftwareStatementCertificateOrKeyType
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementCertificateOrKeyType'
    SoftwareStatementId:
      description: The software statement ID
      in: path
      name: SoftwareStatementId
      required: true
      schema:
        $ref: '#/components/schemas/SoftwareStatementId'
    TnCId:
      description: Terms and Conditions unique identifier
      in: path
      name: TnCId
      required: true
      schema:
        $ref: '#/components/schemas/TnCId'
    UserEmailId:
      description: Email address of the super user
      in: path
      name: UserEmailId
      required: true
      schema:
        $ref: '#/components/schemas/UserEmailId'
    x-customer-user-agent:
      description: Indicates the user-agent that the PSU is using.
      in: header
      name: x-customer-user-agent
      required: false
      schema:
        type: string
    x-fapi-auth-date:
      description: "The time when the PSU last logged in with the TPP. \nAll dates
        in the HTTP headers are represented as RFC 7231 Full Dates. An example is
        below: \nSun, 10 Sep 2017 19:43:31 UTC"
      in: header
      name: x-fapi-auth-date
      required: false
      schema:
        pattern: ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)
          \d{4} \d{2}:\d{2}:\d{2} (GMT|UTC)$
        type: string
    x-fapi-customer-ip-address:
      description: The PSU's IP address if the PSU is currently logged in with the
        TPP.
      in: header
      name: x-fapi-customer-ip-address
      required: false
      schema:
        type: string
    x-fapi-interaction-id:
      description: An RFC4122 UID used as a correlation id.
      in: header
      name: x-fapi-interaction-id
      required: false
      schema:
        type: string
    x-idempotency-key:
      description: |
        Every request will be processed only once per x-idempotency-key.  The
        Idempotency Key will be valid for 24 hours.
      in: header
      name: x-idempotency-key
      required: false
      schema:
        maxLength: 40
        pattern: ^(?!\s)(.*)(\S)$
        type: string
    x-jws-signature:
      description: A detached JWS signature of the body of the payload.
      in: header
      name: x-jws-signature
      required: false
      schema:
        type: string
  requestBodies:
    AccessTokenRequest:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AccessTokenRequest'
      description: Client Access Token Request
      required: true
    AccessTokenRevocationRequest:
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/components/schemas/AccessTokenRevocationRequest'
      description: A valid RFC7009 request - https://datatracker.ietf.org/doc/html/rfc7009#section-2.1
      required: true
    AmendCertificateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AmendCertificateRequest'
      description: Amend a certificate, current functionality supports Revoke Reason
      required: true
    ApiDiscoveryEndpointRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiDiscoveryEndpointRequest'
      description: Api Resource request
    ApiResourceRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResourceRequest'
      description: Api Resource request
    AuthorisationDomainRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainRequest'
      description: Authorisation Domain creation request
      required: true
    AuthorisationDomainRoleRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainRoleRequest'
      description: Authorisation Domain Role creation request
      required: true
    AuthorisationDomainUserCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainUserCreateRequest'
      description: Admin user creation request
      required: true
    AuthorisationDomainUserUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainUserUpdateRequest'
      description: Request object to update a domain user
    AuthorisationServerCertificationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerCertificationRequest'
      description: Properties to create/update a certification for an authorisation
        server
      required: true
    AuthorisationServerRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerRequest'
      description: Properties to create/update authorisation server
      required: true
    AuthorityAuthorisationDomainRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorityAuthorisationDomainRequest'
      description: Authority Authorisation Domain mapping request
      required: true
    AuthorityRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorityRequest'
      description: Reference authority request
      required: true
    CSROrKey:
      content:
        application/x-pem-file:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyOrJWT'
      description: PEM file -- the contents of the PEM file will differ depending
        upon *SoftwareStatementCertificateOrKeyType*. If *SoftwareStatementCertificateOrKeyType*
        is set to *brcac*, *rtssigning* or *rtstransport* then the PEM file should
        contain a Certificate Signing Request (CSR) for an RTS signing or RTS transport
        certificate respectively; if *SoftwareStatementCertificateOrKeyType* is set
        to *sigkey*, *enckey* then the PEM file should contain a public signing or
        encryption key respectively.
      required: true
    CertificateOrCSROrJWS:
      content:
        application/jwt:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyOrJWT'
        application/x-pem-file:
          schema:
            $ref: '#/components/schemas/CertificateOrKeyOrJWT'
      description: |
        * __PEM file__ -- when the request `Content-Type` header is set to  `application/x-pem-file` the contents of the PEM file will differ depending upon `OrganisationCertificateType`. If `OrganisationCertificateType` is set to `qwac`, `qseal` then the PEM file should contain a *QWAC* or a *QSEAL* certificate respectively; if `OrganisationCertificateType` is set to `rtswac`, `rtsseal`, `brcac` or `brseal` then the PEM file should contain a Certificate Signing Request (CSR) for an RTS-issued *RTSWAC*, *RTSSEAL*, *BRCAC* or *BRSEAL* certificate respectively.
        * __Signed JWT__ -- when the request `Content-Type` header is set to `application/jwt` the body of the signed JWT will contain a CSR or a certificate.
        ### Requesting a Certificate using a signed JWT
        The header `kid` claim is the ID of the QSealC certificate assigned to it by the RTS JWKS store.
        The body `csr` claim is the CSR in the DER format.
        ```
        {
          "typ": "JWT",
          "alg": "ES256",
          "kid": "ABCD1234",
        }
        {
          "csr": "string"
        }
        ```
        ### Uploading a Certificate using a signed JWT
        The header `kid` claim is the ID of the QSealC certificate assigned to it by the RTS JWKS store.
        The body `x5c` claim is the array of certificate, issuer certificate, and root certificate in the DER format.
        ```
        {
          "typ": "JWT",
          "alg": "ES256",
          "kid": "ABCD1234",
        }
        {
          "x5c": ["qsealc", "issuer certificate", "root certificate"]
        }
        ```
        EXAMPLE REQUEST PAYLOAD USING SIGNED JWT REQUESTS
        ```
        POST /organisations/123456789012345678/certificates/rtswac HTTP/1.1
        Content-Type: application/jwt
        Accept: application/json
        Host: raidiam.tobedecided.org.uk
        eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiIsImtpZCI6IkFCQ0QxMjM0IiwieDVjIjpbInFzZWFsYyIsImlzc3VlciBjZXJ0aWZpY2F0ZSIsInJvb3QgY2VydGlmaWNhdGUiXX0.eyJyZWRpcmVjdF91cmlzIjpbInN0cmluZyJdLCJ0b2tlbl9lbmRwb2ludF9hdXRoX21ldGhvZCI6InN0cmluZyIsImdyYW50X3R5cGVzIjpbInN0cmluZyJdLCJyZXNwb25zZV90eXBlcyI6WyJzdHJpbmcibSwiY2xpZW50X25hbWUiOiJzdHJpbmciLCJjbGllbnRfdXJpIjoic3RyaW5nIiwibG9nb191cmkiOiJzdHJpbmciLCJzY29wZSI6InN0cmluZyIsImNvbnRhY3RzIjpbInVzZXJAZXhhbXBsZS5jb20iXSwidG9zX3VyaSI6InN0cmluZyIsInBvbGljeV91cmkiOiJzdHJpbmciLCJqd2tzX3VyaSI6InN0cmluZyIsImp3a3MiOnt9LCJzb2Z0d2FyZV9pZCI6InN0cmluZyIsInNvZnR3YXJlX3ZlcnNpb24iOiJzdHJpbmcifQ.lMsADSHkFGUw5PtgdEqXslYArzqf6tbg0lo0kCitOUA
        ```
      required: true
    CertificationManagerCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificationManagerCreationRequest'
      description: Super user creation request
      required: true
    ClientCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientCreationRequest'
      description: Client Creation Request
      required: true
    ClientUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientUpdateRequest'
      description: Client Update Request
      required: true
    ContactRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactRequest'
      description: Properties to update contacts
      required: true
    EssSignRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EssSignRequest'
      description: Request object to capture ESS sign attributes
    IntrospectionRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/IntrospectionRequest'
      description: Reference introspection request
      required: true
    MetadataRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MetadataRequest'
      description: Properties to create a metadata object to associate with a domain
        role
      required: true
    OrgAdminUserCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgAdminUserCreateRequest'
      description: Org Admin user create request
    Organisation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationRequest'
      description: Create a new organisation
      required: true
    OrganisationAuthorityClaimAuthorisationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisationRequest'
      description: Properties to update/retrieve authorisation server
      required: true
    OrganisationAuthorityClaimRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaimRequest'
      description: Properties to create/update authority claims
      required: true
    OrganisationAuthorityDomainClaimRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityDomainClaimRequest'
      description: Authority Authorisation Domain mapping request
      required: true
    OrganisationAuthorityDomainClaimUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityDomainClaimUpdateRequest'
      description: Authority Authorisation Domain mapping request
      required: true
    OrganisationConformanceTest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationConformanceTest'
      description: Create and run a Conformance Suite test
      required: true
    OrganisationEnrol:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationEnrol'
      description: Enrol an organisation
      required: true
    OrganisationUpdate:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationUpdateRequest'
      description: Update an organisation
      required: true
    SoftwareAuthorityClaimRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareAuthorityClaimRequest'
      description: Software Statement authority claim's payload
      required: true
    SoftwareAuthorityClaimUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareAuthorityClaimUpdateRequest'
      description: Software Statement authority claim's update payload
      required: true
    SoftwareStatementRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementRequest'
      description: Software Statement payload
      required: true
    SoftwareStatementUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementUpdateRequest'
      description: Software Statement payload
      required: true
    SuperUserCreationRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuperUserCreationRequest'
      description: Super user creation request
      required: true
    TermsAndConditionsCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TermsAndConditionsItem'
      description: TnC create request
      required: true
    TermsAndConditionsUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TermsAndConditionsUpdateRequest'
      description: TnC update request
      required: true
    UnlockSoftwareStatementRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UnlockSoftwareStatementRequest'
      description: Software Statement payload
      required: true
    UserCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserCreateRequest'
      description: User create request
      required: true
    UserUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserUpdateRequest'
      description: Properties to toggle a user between activated and deactivated status
      required: true
  responses:
    AllWebhooksResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WebhookStatusResponses'
      description: Update all webhooks response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    ApiDiscoveryEndpoint:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiDiscoveryEndpoint'
      description: Authorisation server response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    ApiDiscoveryEndpointFamilyResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiDiscoveryEndpointFamilyResponse'
      description: Api endpoint creation response with family complete flag
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    ApiDiscoveryEndpoints:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiDiscoveryEndpoints'
      description: Authorisation server response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    ApiResource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResource'
      description: Authorisation server Api Resource response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    ApiResources:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiResources'
      description: Authorisation server Api Resources response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationDomain:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomain'
      description: Data of an authorisation domain mapped to an authority
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationDomainRole:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainRole'
      description: Role data
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationDomainRolesPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainRolesPage'
      description: All data of authorisation domains mapped to an authority
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationDomainUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainUser'
      description: User data belonging to an authorisation domain
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationDomainUsersPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainUsersPage'
      description: All users belonging to an authorisation domain
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationDomainsPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationDomainsPage'
      description: All data of authorisation domains mapped to an authority
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationServer:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationServer'
      description: Authorisation server response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationServerCertification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerCertification'
      description: Authorisation Server certification for the given certification
        id
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationServerCertifications:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationServerCertifications'
      description: Authorisation Server certification for the given certification
        id
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorisationServers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorisationServers'
      description: All authorisation servers for the org
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Authorities:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authorities'
      description: |
        Reference data table for all authorities with their countries
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Authority:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Authority'
      description: |
        Get a reference authority by Id
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorityAuthorisationDomain:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorityAuthorisationDomain'
      description: Authority to domain mapping data
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    AuthorityAuthorisationDomainsPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AuthorityAuthorisationDomainsPage'
      description: All data of authorisation domains mapped to an authority
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    BadGateway:
      description: Bad Gateway
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpResponseBody'
      description: Bad Request
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    CertificatesOrKey:
      content:
        application/jwk+json:
          schema:
            $ref: '#/components/schemas/CertificateOrKey'
      description: A certificate object
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    CertificatesOrKeys:
      content:
        application/jwk-set+json:
          schema:
            $ref: '#/components/schemas/CertificatesOrKeys'
      description: All certificates for the org
    CertificationManager:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificationManager'
      description: Certification manager data
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    CertificationManagers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CertificationManagers'
      description: All certification managers
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    ClientCreationResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ClientCreationResponse'
      description: |
        Creates an OAuth Client in the OpenID Server
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Conflict:
      description: Conflict
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Contact:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Contact'
      description: A contact object
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    ContactsPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ContactsPage'
      description: Paged Contacts Snapshot
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    EssPollAllResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EssPollResponses'
      description: External Signing Service Poll All response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    EssPollResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EssPollResponse'
      description: External Signing Service Poll response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Forbidden:
      description: Forbidden
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    InternalServerError:
      description: Internal Server Error
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Introspection:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Introspection'
      description: |
        metadata for token
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Metadata:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MetadataResponse'
      description: Single metadata object
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    MetadataList:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MetadataListResponse'
      description: List of all metadata associated with an object
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    NoContent:
      description: No Content
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    NotAcceptable:
      description: Not Acceptable
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HttpResponseBody'
      description: Not found
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Ok:
      description: No Content
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrgTermsAndConditionsDetail:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgTermsAndConditionsDetail'
      description: Details of the TnC and external signing service
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrgTermsAndConditionsPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrgTermsAndConditionsPage'
      description: Org TnCs history
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Organisation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Organisation'
      description: |
        Full details of the organisation
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationAdminUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAdminUser'
      description: Admin user details
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationAdminUsers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAdminUsers'
      description: All admin users for this org
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationAuthorityClaim:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaim'
      description: Authority claim for the given Id
    OrganisationAuthorityClaimAuthorisation:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'
      description: Authorisations response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationAuthorityClaimAuthorisations:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisations'
      description: Authorisations response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationAuthorityClaims:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityClaims'
      description: All authority claims for the organisation
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationAuthorityDomainClaim:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'
      description: All authority to domain mappings data
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationAuthorityDomainClaimsPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationAuthorityDomainClaimsPage'
      description: All data of an organisation's authority domain claims
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationConformanceTestResult:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationConformanceTestResult'
      description: |
        Result of the conformance suite test run
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationEnrolments:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationEnrolments'
      description: |
        Full details of the organisation enrolment response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationSnapshot:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationSnapshot'
      description: Snapshot data of the organisation
    OrganisationWithTnc:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationWithTnc'
      description: Full details of the organisation including TnC information
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationsExportOpenData:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationsExportOpenData'
      description: Export the open-data for all the organisations
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationsPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationsPage'
      description: All organisations
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    OrganisationsRoles:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationsRoles'
      description: Export the roles for all the organisations
      headers:
        x-fapi-interaction-id:
          description: An RFC4122 UID used as a correlation id.
          schema:
            example: 73cac523-d3ae-2289-b106-330a6218710d
            type: string
    OrganisationsSnapshot:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OrganisationsSnapshot'
      description: Snapshot data of all the organisations
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    RetrieveTokenResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AccessTokenResponse'
      description: |
        Access token response
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    SoftwareAuthorityClaim:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareAuthorityClaim'
      description: Authority claim for the given Id
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    SoftwareAuthorityClaims:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareAuthorityClaims'
      description: Authority claim for the given Id
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    SoftwareStatement:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatement'
      description: Get the software statements with the given id
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    SoftwareStatementAssertion:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatementAssertion'
        application/jwt:
          schema:
            $ref: '#/components/schemas/SoftwareStatementAssertion'
      description: OK
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    SoftwareStatements:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SoftwareStatements'
      description: All software statements for the org
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    SuperUser:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuperUser'
      description: Super user data
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    SuperUsers:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SuperUsers'
      description: All organisations
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    TermsAndConditionsItem:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TermsAndConditionsItem'
      description: Details of the TnC item
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    TermsAndConditionsPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TermsAndConditionsPage'
      description: Paged data of TnC items
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    TooManyRequests:
      description: Too many requests, maximum capacity reached. Requests are now throttled.
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    Unauthorized:
      description: Unauthorized
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    UpstreamTimeout:
      description: Upstream timeout, insufficient capacity to serve request. More
        capacity being brought online. Please try again.
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    UserDetail:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserDetail'
      description: Details of the user
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    UserOPInfo:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserOPInfo'
      description: User information from the OpenId Provider
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    UserTermsAndConditionsPage:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UserTermsAndConditionsPage'
      description: User TnCs history
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
    WellKnown:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/WellKnown'
      description: endpoint discovery for well known endpoint
      headers:
        x-fapi-interaction-id:
          $ref: '#/components/schemas/xFapiInteractionId'
  schemas:
    AccessTokenRequest:
      properties:
        assertion:
          description: The assertion that is used to get a token, required with grant_type
            private_key_jwt
          minLength: 1
          type: string
          x-required-message: Assertion is a required field
        client_assertion_type:
          description: Required with grant_type private_key_jwt
          enum:
          - urn:ietf:params:oauth:client-assertion-type:jwt-bearer
          maxLength: 160
          minLength: 1
          type: string
          x-required-message: Client assertion type must be set to urn:ietf:params:oauth:client-assertion-type:jwt-bearer
        client_id:
          description: Required with grant_type private_key_jwt
          maxLength: 160
          minLength: 1
          type: string
        grant_type:
          default: client_credentials
          description: The Grant Type
          enum:
          - client_credentials
          - private_key_jwt
          - tls_client_auth
          - urn:ietf:params:oauth:grant-type:device_code
          minLength: 1
          type: string
          x-required-message: Only client credentials supported
      required:
      - grant_type
      type: object
    AccessTokenResponse:
      properties:
        access_token:
          description: Access token
          type: string
        expires_in:
          description: lifetime in seconds
          type: integer
        scope:
          type: string
        token_type:
          type: string
      type: object
    AccessTokenRevocationRequest:
      description: A valid RFC7009 request - https://datatracker.ietf.org/doc/html/rfc7009#section-2.1
      properties:
        token:
          description: The token that the client wants to get revoked.
          type: string
          x-required-message: A token is required to be revoked.
        token_type_hint:
          description: |
            A hint about the type of the token
            submitted for revocation.  Clients MAY pass this parameter in
            order to help the authorization server to optimize the token
            lookup.  If the server is unable to locate the token using
            the given hint, it MUST extend its search across all of its
            supported token types.  An authorization server MAY ignore
            this parameter, particularly if it is able to detect the
            token type automatically.  This specification defines two
            such values:

            * access_token: An access token as defined in [RFC6749],
              Section 1.4

            * refresh_token: A refresh token as defined in [RFC6749],
              Section 1.5
          enum:
          - access_token
          - refresh_token
          type: string
      required:
      - token
      type: object
    AmendCertificateRequest:
      properties:
        RevokeReason:
          default: unspecified
          description: Specify a reason for revokation of the certificate.
          enum:
          - unspecified
          - keycompromise
          - superseded
          - cessationofoperation
          - privilegewithdrawn
          type: string
          x-required-message: RevokeReason must be provided
      required:
      - RevokeReason
      type: object
    ApiCertificationUri:
      description: Link to the certifation package. Example https://github.com/Open[Domain]/conformance/blob/main/submissions/functional/business/1.0.3/api-business-customer.zip
      format: uri
      maxLength: 500
      pattern: ^(https://).*
      type: string
      x-pattern-message: ApiCertificationUri must be in a URI format https://...
    ApiDiscoveryEndpoint:
      properties:
        ApiDiscoveryId:
          description: Unique Id of this discovery endpoint record
          maxLength: 40
          type: string
        ApiEndpoint:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: ApiEndpoint must be in a URI format https://... or http://...
      type: object
    ApiDiscoveryEndpointFamilyResponse:
      properties:
        ApiDiscoveryEndpoint:
          $ref: '#/components/schemas/ApiDiscoveryEndpoint'
        FamilyComplete:
          description: Denotes a completed api family set
          type: boolean
      type: object
    ApiDiscoveryEndpointId:
      description: The unique ID of an Api discovery endpoint resource
      maxLength: 40
      type: string
    ApiDiscoveryEndpointRequest:
      properties:
        ApiEndpoint:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: ApiEndpoint must be in a URI format https://... or http://...
      type: object
    ApiDiscoveryEndpoints:
      items:
        $ref: '#/components/schemas/ApiDiscoveryEndpoint'
      type: array
    ApiFamilyType:
      description: The type of API this record describes
      maxLength: 40
      minLength: 1
      type: string
      x-required-message: Family Type must be provided
    ApiResource:
      properties:
        ApiCertificationUri:
          $ref: '#/components/schemas/ApiCertificationUri'
        ApiDiscoveryEndpoints:
          items:
            $ref: '#/components/schemas/ApiDiscoveryEndpoint'
          type: array
        ApiFamilyType:
          $ref: '#/components/schemas/ApiFamilyType'
        ApiResourceId:
          $ref: '#/components/schemas/ApiResourceId'
        ApiVersion:
          description: The version number of the API
          type: number
        CertificationExpirationDate:
          $ref: '#/components/schemas/CertificationExpirationDate'
        CertificationStartDate:
          $ref: '#/components/schemas/CertificationStartDate'
        CertificationStatus:
          default: Awaiting Certification
          description: Is this certification current or expired
          enum:
          - Awaiting Certification
          - Certified
          - Deprecated
          - Rejected
          - Self-Certified
          type: string
        FamilyComplete:
          description: Denotes whether or not the api resource has had all related
            api endpoints published
          type: boolean
      type: object
    ApiResourceId:
      description: The unique ID of an Api version resource
      maxLength: 40
      type: string
    ApiResourceRequest:
      properties:
        ApiCertificationUri:
          $ref: '#/components/schemas/ApiCertificationUri'
        ApiFamilyType:
          $ref: '#/components/schemas/ApiFamilyType'
        ApiVersion:
          description: The version number of the API
          type: number
          x-required-message: Version must be provided
        CertificationStartDate:
          maxLength: 10
          nullable: true
          pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$
          type: string
          x-pattern-message: Date must match the format of dd/mm/yyyy, for example
            31/12/2021
        CertificationStatus:
          default: Awaiting Certification
          description: Is this certification current or expired
          enum:
          - Awaiting Certification
          - Certified
          - Deprecated
          - Rejected
          - Self-Certified
          type: string
      required:
      - ApiFamilyType
      - ApiVersion
      type: object
    ApiResources:
      items:
        $ref: '#/components/schemas/ApiResource'
      type: array
    AuthorisationDomain:
      properties:
        AuthorisationDomainDescription:
          description: The authorisation domain description
          type: string
        AuthorisationDomainName:
          description: The authorisation domain name
          type: string
        AuthorisationDomainRegion:
          description: The authorisation domain region
          type: string
        Status:
          default: Active
          description: Is this Domain Active or Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    AuthorisationDomainName:
      description: Authorisation Domain Name
      maxLength: 30
      type: string
    AuthorisationDomainRequest:
      properties:
        AuthorisationDomainDescription:
          description: The authorisation domain description
          type: string
        AuthorisationDomainName:
          description: The authorisation domain name
          maxLength: 30
          minLength: 1
          type: string
          x-required-message: The authorisation domain name is mandatory
        AuthorisationDomainRegion:
          description: The authorisation domain region
          minLength: 2
          type: string
          x-required-message: The authorisation domain region is mandatory
      required:
      - AuthorisationDomainName
      - AuthorisationDomainRegion
      type: object
    AuthorisationDomainRole:
      properties:
        AuthorisationDomainName:
          description: The authorisation domain name
          type: string
        AuthorisationDomainRoleDescription:
          description: The authorisation domain role description
          type: string
        AuthorisationDomainRoleName:
          description: The authorisation domain role
          type: string
        Status:
          default: Active
          description: Is this mapping Active or Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    AuthorisationDomainRoleName:
      description: Authorisation Domain Role Name
      maxLength: 30
      type: string
    AuthorisationDomainRoleRequest:
      properties:
        AuthorisationDomainName:
          description: The authorisation domain name
          minLength: 1
          type: string
          x-required-message: The authorisation domain name is mandatory
        AuthorisationDomainRoleDescription:
          default: ""
          description: The authorisation domain role description
          type: string
        AuthorisationDomainRoleName:
          description: The authorisation domain role name
          maxLength: 30
          minLength: 1
          type: string
          x-required-message: The authorisation domain role name is mandatory
      required:
      - AuthorisationDomainRoleName
      - AuthorisationDomainName
      type: object
    AuthorisationDomainRolesPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/AuthorisationDomainRole'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    AuthorisationDomainUser:
      properties:
        AuthorisationDomain:
          description: The authorisation domain for this user
          type: string
        AuthorisationDomainRole:
          description: The authorisation domain role for this user
          type: string
        AuthorisationDomainUserId:
          description: Unique record ID
          type: string
        ContactRole:
          $ref: '#/components/schemas/ContactRoleEnum'
        Email:
          description: The user email address
          type: string
        Status:
          default: Active
          description: Is this user Active or Inactive
          enum:
          - Active
          - Inactive
          type: string
        System:
          $ref: '#/components/schemas/SystemEnum'
      type: object
    AuthorisationDomainUserCreateRequest:
      properties:
        AuthorisationDomainRole:
          description: The authorisation domain role for this user
          minLength: 1
          type: string
        ContactRole:
          $ref: '#/components/schemas/ContactRoleEnum'
        Email:
          description: The user email address
          pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
          type: string
          x-pattern-message: EmailAddress must be a valid email
        System:
          $ref: '#/components/schemas/SystemEnum'
      required:
      - Email
      - AuthorisationDomainRole
      - ContactRole
      - System
      type: object
    AuthorisationDomainUserId:
      description: Unique record ID to identify Domain user
      maxLength: 50
      type: string
    AuthorisationDomainUserUpdateRequest:
      properties:
        ContactRole:
          $ref: '#/components/schemas/ContactRoleEnum'
        Status:
          $ref: '#/components/schemas/StatusEnum'
        System:
          $ref: '#/components/schemas/SystemEnum'
      type: object
    AuthorisationDomainUsersPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/AuthorisationDomainUser'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    AuthorisationDomainsPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/AuthorisationDomain'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    AuthorisationServer:
      properties:
        ApiResources:
          items:
            $ref: '#/components/schemas/ApiResource'
          type: array
        AuthorisationServerCertifications:
          items:
            $ref: '#/components/schemas/AuthorisationServerCertification'
          type: array
        AuthorisationServerId:
          $ref: '#/components/schemas/AuthorisationServerId'
        AutoRegistrationSupported:
          default: false
          type: boolean
        CustomerFriendlyDescription:
          maxLength: 255
          type: string
        CustomerFriendlyLogoUri:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*\.(svg)$
          type: string
          x-pattern-message: CustomerFriendlyLogoUri must be in a URI format https://...
            .svg or http://... .svg
        CustomerFriendlyName:
          maxLength: 255
          type: string
        DeveloperPortalUri:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: DeveloperPortalUri must be in a URI format https://...
            or http://...
        NotificationWebhook:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: WebhookUri must be in a URI format https://... or http://...
        NotificationWebhookAddedDate:
          description: Creation date
          example: "2021-01-30T08:30:00Z"
          format: date
          type: string
        NotificationWebhookStatus:
          $ref: '#/components/schemas/NotificationWebhookStatusEnum'
        OpenIDDiscoveryDocument:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: OpenIDDiscoveryDocument must be in a URI format https://...
            or http://...
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        ParentAuthorisationServerId:
          $ref: '#/components/schemas/AuthorisationServerId'
        PayloadSigningCertLocationUri:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: PayloadSigningCertLocationUri must be in a URI format
            https://... or http://...
        SupportsCiba:
          default: false
          type: boolean
        SupportsDCR:
          default: false
          type: boolean
        TermsOfServiceUri:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: TermsOfServiceUri must be in a URI format https://...
            or http://...
      type: object
    AuthorisationServerCertification:
      properties:
        AuthorisationServerId:
          $ref: '#/components/schemas/AuthorisationServerId'
        CertificationExpirationDate:
          $ref: '#/components/schemas/CertificationExpirationDate'
        CertificationId:
          $ref: '#/components/schemas/AuthorisationServerCertificationId'
        CertificationStartDate:
          $ref: '#/components/schemas/CertificationStartDate'
        CertificationURI:
          $ref: '#/components/schemas/ApiCertificationUri'
        ProfileVariant:
          description: Type of certification
          oneOf:
          - $ref: '#/components/schemas/CertificationCibaEnum'
          - $ref: '#/components/schemas/CertificationRedirectEnum'
          - $ref: '#/components/schemas/CertificationDCREnum'
          type: string
          x-required-message: Certification needs to have a type
        ProfileVersion:
          description: The version number of the certification
          type: number
          x-required-message: Version must be provided
        Status:
          default: Awaiting Certification
          description: Is this certification current or expired
          enum:
          - Awaiting Certification
          - Certified
          - Deprecated
          - Rejected
          - Self-Certified
          type: string
      type: object
    AuthorisationServerCertificationId:
      description: Unique ID associated with the auth server certification
      maxLength: 40
      minLength: 1
      type: string
    AuthorisationServerCertificationRequest:
      properties:
        CertificationStartDate:
          maxLength: 10
          pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$
          type: string
          x-pattern-message: Date must match the format of dd/mm/yyyy, for example
            31/12/2021
        CertificationURI:
          $ref: '#/components/schemas/ApiCertificationUri'
        ProfileVariant:
          description: Type of certification
          oneOf:
          - $ref: '#/components/schemas/CertificationCibaEnum'
          - $ref: '#/components/schemas/CertificationRedirectEnum'
          - $ref: '#/components/schemas/CertificationDCREnum'
          type: string
          x-required-message: Certification needs to have a type
        ProfileVersion:
          description: The version number of the certification
          type: number
          x-required-message: Version must be provided
        Status:
          default: Awaiting Certification
          description: Is this certification current or expired
          enum:
          - Awaiting Certification
          - Certified
          - Deprecated
          - Rejected
          - Self-Certified
          type: string
      type: object
    AuthorisationServerCertifications:
      description: The list of certifications for a given authorisation server
      items:
        $ref: '#/components/schemas/AuthorisationServerCertification'
      type: array
    AuthorisationServerId:
      maxLength: 40
      type: string
    AuthorisationServerRequest:
      properties:
        AutoRegistrationSupported:
          description: Default is true
          type: boolean
          x-required-message: AutoRegistrationSupported must be provided
        CustomerFriendlyDescription:
          description: A customer friendly description
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: CustomerFriendlyDescription must be provided
        CustomerFriendlyLogoUri:
          description: A compliant URI
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*\.(svg)$
          type: string
          x-pattern-message: CustomerFriendlyLogoUri must be in a URI format https://*.svg
            or http://*.svg
          x-required-message: CustomerFriendlyLogoUri must be provided
        CustomerFriendlyName:
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: CustomerFriendlyName must be provided
        DeveloperPortalUri:
          description: A compliant URI
          maxLength: 255
          nullable: true
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: DeveloperPortalUri must be in a URI format https://...
            or http://...
        NotificationWebhook:
          description: A compliant URI
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: WebhookUri must be in a URI format https://... or http://...
        OpenIDDiscoveryDocument:
          description: A compliant URI
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: OpenIDDiscoveryDocument must be in a URI format https://...
            or http://...
          x-required-message: OpenIDDiscoveryDocument must be provided
        ParentAuthorisationServerId:
          $ref: '#/components/schemas/AuthorisationServerId'
        PayloadSigningCertLocationUri:
          description: A compliant URI
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: PayloadSigningCertLocationUri must be in a URI format
            https://... or http://...
          x-required-message: PayloadSigningCertLocationUri must be provided
        TermsOfServiceUri:
          description: A compliant URI
          maxLength: 255
          nullable: true
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: TermsOfServiceUri must be in a URI format https://...
            or http://...
      required:
      - AutoRegistrationSupported
      - CustomerFriendlyName
      - CustomerFriendlyLogoUri
      - OpenIDDiscoveryDocument
      - PayloadSigningCertLocationUri
      - CustomerFriendlyDescription
      type: object
    AuthorisationServers:
      items:
        $ref: '#/components/schemas/AuthorisationServer'
      type: array
    Authorities:
      items:
        $ref: '#/components/schemas/Authority'
      type: array
    Authority:
      properties:
        AuthorityCode:
          description: Code of the Authority i.e. FCA, etc
          maxLength: 40
          type: string
          x-required-message: AuthorityCode must be provided
        AuthorityCountry:
          description: country of the Authority
          maxLength: 255
          type: string
        AuthorityId:
          $ref: '#/components/schemas/AuthorityId'
        AuthorityName:
          description: Name of the Authority i.e. FCA, etc
          maxLength: 255
          type: string
        AuthorityUri:
          description: URI of the authority
          type: string
        Status:
          description: Is this Authority Active/Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    AuthorityAuthorisationDomain:
      properties:
        AuthorisationDomainName:
          description: The authorisation domain name
          type: string
        AuthorityAuthorisationDomainId:
          description: The GUID of the Authority-Domain mapping
          type: string
        AuthorityId:
          description: The GUID of the Authority
          type: string
        Status:
          default: Active
          description: Is this user Active or Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    AuthorityAuthorisationDomainId:
      description: Mapping ID between Authority and Authorisation Domain
      maxLength: 50
      type: string
    AuthorityAuthorisationDomainRequest:
      properties:
        AuthorisationDomainName:
          description: The authorisation domain name
          minLength: 1
          type: string
          x-required-message: The authorisation domain name is mandatory
      required:
      - AuthorisationDomainName
      type: object
    AuthorityAuthorisationDomainsPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/AuthorityAuthorisationDomain'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    AuthorityId:
      description: Unique ID associated with the Authorisation reference schema
      maxLength: 40
      minLength: 1
      type: string
    AuthorityRequest:
      properties:
        AuthorityCode:
          description: Code of the Authority i.e. GBFCA, etc
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: AuthorityID must be provided
        AuthorityCountry:
          description: Country of the authority
          maxLength: 255
          minLength: 2
          type: string
          x-required-message: AuthorityCountry must be provided
        AuthorityName:
          description: The ID of the Authority i.e GBFCA, etc
          maxLength: 40
          minLength: 1
          type: string
          x-required-message: AuthorityName must be provided
        AuthorityUri:
          description: URI of the authority
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: AuthorityUri must be in a URI format https://... or http://...
          x-required-message: AuthorityUri must be provided
      required:
      - AuthorityName
      - AuthorityCode
      - AuthorityUri
      - AuthorityCountry
      type: object
    CertificateOrKey:
      properties:
        false:
          maxLength: 255
          type: string
        ClientName:
          maxLength: 40
          type: string
        ExpiryDateTime:
          maxLength: 30
          type: string
        JwkPath:
          description: Used to display path to JWKS containing this certificate
          maxLength: 255
          type: string
        OrgJwkPath:
          description: Used to display path to Org JWKS containing org certificates
          maxLength: 255
          type: string
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        SignedCertPath:
          description: Used to display location of the signed certificate in PEM format
          maxLength: 255
          type: string
        SoftwareStatementIds:
          items:
            $ref: '#/components/schemas/SoftwareStatementId'
          type: array
        Status:
          maxLength: 40
          type: string
        ValidFromDateTime:
          maxLength: 30
          type: string
        e:
          maxLength: 255
          type: string
        keyType:
          maxLength: 255
          type: string
        kid:
          maxLength: 255
          type: string
        kty:
          maxLength: 255
          type: string
        use:
          maxLength: 255
          type: string
        x5c:
          items:
            description: A PKIX certificate [RFC5280]
            maxLength: 255
            type: string
          type: array
        x5t:
          maxLength: 255
          type: string
        x5thashS256:
          maxLength: 255
          type: string
        x5u:
          maxLength: 255
          type: string
      type: object
    CertificateOrKeyId:
      maxLength: 255
      type: string
    CertificateOrKeyOrJWT:
      type: string
    CertificatesOrKeys:
      items:
        $ref: '#/components/schemas/CertificateOrKey'
      type: array
    CertificationCibaEnum:
      description: The type of ciba certification
      enum:
      - FAPI-CIBA OP poll w/ MTLS
      - FAPI-CIBA OP poll w/ Private Key
      - FAPI-CIBA OP Ping w/ MTLS
      - FAPI-CIBA OP Ping w/ Private Key
      type: string
    CertificationDCREnum:
      description: The type of DCR certification
      enum:
      - DCR Signed payload - JWT
      - DCR Unsigned payload- JSON
      type: string
    CertificationExpirationDate:
      description: JSONDatetime of certification expiration date
      type: string
    CertificationManager:
      properties:
        Email:
          description: The certification managers email address
          type: string
        Status:
          default: Active
          description: Is this certification manager Active or Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    CertificationManagerCreationRequest:
      properties:
        Email:
          description: The super user email address
          minLength: 1
          type: string
          x-required-message: The super user email address is mandatory
      required:
      - Email
      type: object
    CertificationManagers:
      items:
        $ref: '#/components/schemas/CertificationManager'
      type: array
    CertificationRedirectEnum:
      description: The type of redirect certifications
      enum:
      - FAPI Adv. OP w/ MTLS
      - FAPI Adv. OP w/ MTLS, PAR
      - FAPI Adv. OP w/ Private Key
      - FAPI Adv. OP w/ Private Key, PAR
      type: string
    CertificationStartDate:
      description: JSONDatetime of certification start date
      pattern: ^[0-3][0-9]/[0-1][0-9]/2([0-9]{3})$
      type: string
    ClientCreationRequest:
      properties:
        additional_software_metadata:
          additionalProperties: {}
          type: object
        grant_types:
          description: grant_types uri must be provided. For client_credentials this
            should be array containing ["client_credentials"]
          items:
            type: string
            uniqueItems: true
          type: array
          x-required-message: grant_types uri must be provided. For client_credentials
            this should be array containing ["client_credentials"]
        id_token_signed_response_alg:
          default: PS256
          description: Signing algorithim that a client expects the server to return
            an id_token with. Must be PS256
          enum:
          - PS256
          type: string
          x-required-message: id_token_signed_response_alg must be provided
        jwks_uri:
          description: Link to the application active jwks
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-required-message: Link to the application active jwks
        organisation_id:
          $ref: '#/components/schemas/OrganisationId'
        organisation_name:
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: organisation_name must be provided
        organisation_number:
          description: the cnpj number of the organisation
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: organisation_number must be provided
        redirect_uris:
          description: redirect_uris uri must be provided. For client_credentials
            this should be an empty array.
          items:
            type: string
            uniqueItems: true
          type: array
          x-required-message: redirect_uris uri must be provided. For client_credentials
            this should be an empty array.
        response_types:
          description: response_types uri must be provided. For client_credentials
            this should be an empty array
          items:
            type: string
            uniqueItems: true
          type: array
          x-required-message: response_types uri must be provided. For client_credentials
            this should be an empty array
        scope:
          description: scopes to be tagged
          type: string
          x-required-message: scope must be provided.
        software_description:
          maxLength: 255
          type: string
          x-required-message: software_description must be provided
        software_id:
          maxLength: 255
          minLength: 1
          type: string
        software_roles:
          description: array of software roles
          items:
            type: string
          type: array
        tls_client_auth_subject_dn:
          description: The DN of the certificate that will be used to authenticate
            to this client
          maxLength: 250
          type: string
        token_endpoint_auth_method:
          default: private_key_jwt
          description: Token endpoint authentication method
          enum:
          - private_key_jwt
          - tls_client_auth
          - client_secret_basic
          maxLength: 60
          minLength: 1
          type: string
          x-required-message: Token endpoint auth method must be provided
      required:
      - id_token_signed_response_alg
      - token_endpoint_auth_method
      - jwks_uri
      - redirect_uris
      - response_types
      - grant_types
      - scope
      - organisation_id
      - organisation_name
      - organisation_number
      - software_roles
      type: object
    ClientCreationResponse:
      properties:
        application_type:
          default: web
          description: OIDC application type response
          enum:
          - web
          type: string
        authorization_signed_response_alg:
          type: string
        backchannel_user_code_parameter:
          type: boolean
        client_id:
          type: string
        client_id_issued_at:
          type: number
        client_secret:
          type: string
        client_secret_expires_at:
          type: number
        grant_types:
          description: grant_types
          items:
            type: string
          type: array
        id_token_signed_response_alg:
          type: string
        introspection_endpoint_auth_method:
          type: string
        jwks_uri:
          type: string
        organisation_id:
          $ref: '#/components/schemas/OrganisationId'
        organisation_name:
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: organisation_name must be provided
        organisation_number:
          description: the cnpj number of the organisation
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: organisation_number must be provided
        post_logout_redirect_uris:
          description: post_logout_redirect_uris
          items:
            type: string
          type: array
        redirect_uris:
          description: redirect_uris
          items:
            type: string
          type: array
        registration_access_token:
          description: token used to manage client post creation
          type: string
        registration_client_uri:
          description: management uri location to manage client post creation
          type: string
        request_object_signing_alg:
          type: string
        require_auth_time:
          type: boolean
        require_pushed_authorization_requests:
          type: boolean
        require_signed_request_object:
          type: boolean
        response_types:
          description: response_types
          items:
            type: string
          type: array
        revocation_endpoint_auth_method:
          type: string
        scope:
          type: string
        software_description:
          maxLength: 255
          type: string
          x-required-message: software_description must be provided
        software_roles:
          description: array of software roles
          items:
            type: string
          type: array
        subject_type:
          type: string
        tls_client_certificate_bound_access_token:
          type: boolean
        token_endpoint_auth_method:
          type: string
      type: object
    ClientUpdateRequest:
      properties:
        additional_software_metadata:
          additionalProperties: {}
          type: object
        client_id:
          type: string
        client_secret:
          type: string
        grant_types:
          description: grant_types uri must be provided. For client_credentials this
            should be array containing ["client_credentials"]
          items:
            type: string
            uniqueItems: true
          type: array
          x-required-message: grant_types uri must be provided. For client_credentials
            this should be array containing ["client_credentials"]
        id_token_signed_response_alg:
          default: PS256
          description: Signing algorithim that a client expects the server to return
            an id_token with. Must be PS256
          enum:
          - PS256
          type: string
          x-required-message: id_token_signed_response_alg must be provided
        jwks_uri:
          description: Link to the application active jwks
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-required-message: Link to the application active jwks
        organisation_id:
          $ref: '#/components/schemas/OrganisationId'
        organisation_name:
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: organisation_name must be provided
        organisation_number:
          description: the cnpj number of the organisation
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: organisation_number must be provided
        redirect_uris:
          description: redirect_uris uri must be provided. For client_credentials
            this should be an empty array.
          items:
            type: string
            uniqueItems: true
          type: array
          x-required-message: redirect_uris uri must be provided. For client_credentials
            this should be an empty array.
        response_types:
          description: response_types uri must be provided. For client_credentials
            this should be an empty array
          items:
            type: string
            uniqueItems: true
          type: array
          x-required-message: response_types uri must be provided. For client_credentials
            this should be an empty array
        scope:
          description: scopes to be tagged
          type: string
          x-required-message: scope must be provided.
        software_description:
          maxLength: 255
          type: string
          x-required-message: software_description must be provided
        software_roles:
          description: array of software roles
          items:
            type: string
          type: array
        tls_client_auth_subject_dn:
          description: The DN of the certificate that will be used to authenticate
            to this client
          maxLength: 250
          type: string
        token_endpoint_auth_method:
          default: private_key_jwt
          description: Token endpoint authentication method
          enum:
          - private_key_jwt
          - tls_client_auth
          - client_secret_basic
          maxLength: 60
          minLength: 1
          type: string
          x-required-message: Token endpoint auth method must be provided
      required:
      - id_token_signed_response_alg
      - token_endpoint_auth_method
      - jwks_uri
      - redirect_uris
      - response_types
      - grant_types
      - scope
      - organisation_id
      - organisation_name
      - organisation_number
      - software_roles
      - client_id
      - client_secret
    Contact:
      properties:
        AdditionalInformation:
          description: Any additional user information
          maxLength: 65535
          type: string
        AddressLine1:
          description: Address line 1
          maxLength: 255
          type: string
        AddressLine2:
          description: Address line 2
          maxLength: 255
          type: string
        City:
          description: City
          maxLength: 255
          type: string
        ContactId:
          description: Unique contact ID for the row.
          type: string
        ContactType:
          default: Business
          enum:
          - Business
          - Technical
          - Billing
          - Incident
          - Security
          type: string
        Country:
          description: Country
          maxLength: 255
          type: string
        Department:
          maxLength: 255
          type: string
        EmailAddress:
          maxLength: 255
          pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
          type: string
          x-pattern-message: EmailAddress must be a valid email
        FirstName:
          maxLength: 255
          type: string
        LastName:
          maxLength: 255
          type: string
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        PgpPublicKey:
          description: A PGP Public Key in text form
          maxLength: 65535
          type: string
        PhoneNumber:
          maxLength: 18
          type: string
        Postcode:
          description: Postcode
          maxLength: 40
          type: string
      type: object
    ContactId:
      maxLength: 255
      type: string
    ContactRequest:
      properties:
        AdditionalInformation:
          description: Any additional user information
          maxLength: 65535
          type: string
        AddressLine1:
          description: Address line 1
          maxLength: 255
          type: string
        AddressLine2:
          description: Address line 2
          maxLength: 255
          type: string
        City:
          description: City
          maxLength: 255
          type: string
        ContactType:
          default: Business
          description: The type of Contact, default contact type is Business.
          enum:
          - Business
          - Technical
          - Billing
          - Incident
          - Security
          type: string
          x-required-message: ContactType must be provided
        Country:
          description: Country
          maxLength: 255
          type: string
        Department:
          maxLength: 255
          type: string
        EmailAddress:
          maxLength: 255
          pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
          type: string
          x-pattern-message: EmailAddress must be a valid email
        FirstName:
          maxLength: 255
          type: string
        LastName:
          maxLength: 255
          type: string
        PgpPublicKey:
          description: A PGP Public Key in text form
          maxLength: 65535
          type: string
        PhoneNumber:
          maxLength: 18
          minLength: 0
          type: string
          x-required-message: PhoneNumber must be provided
        Postcode:
          description: Postcode
          maxLength: 40
          type: string
      required:
      - ContactType
      - EmailAddress
      type: object
    ContactRoleEnum:
      description: The role of the contact
      enum:
      - PTC
      - STC
      - PBC
      - SBC
      - PSDC
      - SSDC
      - PDRC
      - SDRC
      - PPC
      - SPC
      - PCPC
      - SCPC
      type: string
    Contacts:
      description: The list of contacts
      items:
        $ref: '#/components/schemas/Contact'
      type: array
    ContactsPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Contact'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    DomainRoleDetail:
      properties:
        AuthorisationDomainName:
          type: string
        AuthorisationDomainRoleName:
          type: string
        ContactRole:
          $ref: '#/components/schemas/ContactRoleEnum'
        Status:
          $ref: '#/components/schemas/StatusEnum'
        System:
          $ref: '#/components/schemas/SystemEnum'
      type: object
    EssPollResponse:
      properties:
        EssEnvelopeId:
          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'
        ExternalSigningServiceEnvelopeStatus:
          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
      type: object
    EssPollResponses:
      items:
        $ref: '#/components/schemas/EssPollResponse'
      type: array
    EssSignRequest:
      properties:
        NoOfSigners:
          type: integer
        TnCId:
          $ref: '#/components/schemas/TnCId'
      type: object
    ExternalSigningService:
      properties:
        ExternalSigningServiceEmailSubject:
          description: The Subject of the Email for External Signing Service
          maxLength: 100
          minLength: 1
          type: string
          x-required-message: Email Subject must be provided
        ExternalSigningServiceName:
          $ref: '#/components/schemas/ExternalSigningServiceName'
        ExternalSigningServiceSignerTemplateConfig:
          $ref: '#/components/schemas/ExternalSigningServiceSignerTemplateConfig'
        ExternalSigningServiceSubject:
          description: The Subject of the External Signing Service
          minLength: 1
          type: string
          x-required-message: Subject must be provided
      type: object
    ExternalSigningServiceEnvelopeId:
      description: The envelope id of the ess signing request
      type: string
    ExternalSigningServiceEnvelopeStatus:
      enum:
      - completed
      - created
      - declined
      - deleted
      - delivered
      - processing
      - sent
      - signed
      - template
      - voided
      - expired
    ExternalSigningServiceName:
      description: The Name of the External Signing Service
      enum:
      - DocuSign
      type: string
      x-required-message: External signing service name must be provided
    ExternalSigningServiceSignerTemplateConfig:
      properties:
        Signer1TemplateId:
          description: Template ID for 1 signer
          minLength: 1
          type: string
        Signer1Version:
          description: Version of the TnC document
          readOnly: true
          type: integer
        Signer2TemplateId:
          description: Template ID for 2 signers
          minLength: 1
          type: string
        Signer2Version:
          description: Version of the TnC document
          readOnly: true
          type: integer
        Signer3TemplateId:
          description: Template ID for 3 signers
          minLength: 1
          type: string
        Signer3Version:
          description: Version of the TnC document
          readOnly: true
          type: integer
        Signer4TemplateId:
          description: Template ID for 4 signers
          minLength: 1
          type: string
        Signer4Version:
          description: Version of the TnC document
          readOnly: true
          type: integer
        Signer5TemplateId:
          description: Template ID for 5 signers
          minLength: 1
          type: string
        Signer5Version:
          description: Version of the TnC document
          readOnly: true
          type: integer
        Signer6TemplateId:
          description: Template ID for 6 signers
          minLength: 1
          type: string
        Signer6Version:
          description: Version of the TnC document
          readOnly: true
          type: integer
      type: object
    HttpResponseBody:
      properties:
        errors:
          description: Validation Error messages
          items:
            type: string
          type: array
      type: object
    Introspection:
      properties:
        active:
          description: if the token has expired
          type: boolean
        client_id:
          description: id of client who owns the token
          maxLength: 30
          type: string
        exp:
          description: expiration time in ms
          type: string
        iat:
          description: when the token was issued
          type: string
        iss:
          description: the issuer
          type: string
        jti:
          description: unique string
          type: string
        scope:
          description: scope
          type: string
        sub:
          description: subject of token (not always present, depending on the token)
          type: string
        token_type:
          description: type of token
          type: string
      type: object
    IntrospectionRequest:
      properties:
        token:
          description: Oauth 2.0 token to be introspected
          minLength: 1
          type: string
          x-required-message: a token must be provided
      required:
      - token
      type: object
    MetadataId:
      description: Unique Metadata Id
      maxLength: 40
      type: string
    MetadataListResponse:
      items:
        $ref: '#/components/schemas/MetadataResponse'
      type: array
    MetadataRequest:
      properties:
        Name:
          description: The name of the metadata object
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: Metadata name must be provided
        Type:
          description: The type of metadata i.e. scope, grant_type...
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: Metadata type must be provided
      type: object
    MetadataResponse:
      properties:
        DomainRoleName:
          $ref: '#/components/schemas/AuthorisationDomainRoleName'
        MetadataId:
          $ref: '#/components/schemas/MetadataId'
        Name:
          description: The name of the metadata object
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: Metadata name must be provided
        Type:
          description: The type of metadata i.e. scope, grant_type...
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: Metadata type must be provided
      type: object
    NotificationWebhookStatusEnum:
      default: Pending
      enum:
      - Pending
      - Confirmed
      - Deactivated
      type: string
    OrgAccessDetail:
      properties:
        DomainRoleDetails:
          description: Array of domain, role and status of domain role mapping
          items:
            $ref: '#/components/schemas/DomainRoleDetail'
          type: array
        OrgAdmin:
          description: Is the user the org admin of the current org
          type: boolean
        OrgRegistrationNumber:
          description: CNPJ/Registration number of the org
          type: string
      type: object
    OrgAdminUserCreateRequest:
      properties:
        UserEmail:
          description: Admin user email address
          pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
          type: string
          x-pattern-message: EmailAddress must be a valid email
      required:
      - UserEmail
      type: object
    OrgTermsAndConditionsDetail:
      description: Participant TnC details
      properties:
        InitiatedBy:
          description: Email of the user who initiated the External signing for this
            participant
          type: string
        Role:
          description: Role of the user who initiated the External signing for this
            participant
          type: string
        TermsAndConditionsDetail:
          $ref: '#/components/schemas/TermsAndConditionsDetail'
      type: object
    OrgTermsAndConditionsPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/OrgTermsAndConditionsDetail'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    Organisation:
      properties:
        AddressLine1:
          description: Address line 1
          maxLength: 255
          type: string
        AddressLine2:
          description: Address line 2
          maxLength: 255
          type: string
        City:
          description: City
          maxLength: 255
          type: string
        CompanyRegister:
          description: Legal company register for the country, i.e. Companies House
          maxLength: 255
          type: string
        Country:
          description: Country
          maxLength: 255
          type: string
        CountryOfRegistration:
          description: Country of registration for the org
          maxLength: 255
          type: string
        CreatedOn:
          description: JSONDatetime of organisation creation.
          maxLength: 30
          type: string
        LegalEntityName:
          description: Legal Entity name for the org. Usually the same as org name
          maxLength: 255
          type: string
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        OrganisationName:
          description: Name of the organisation.
          maxLength: 255
          type: string
        ParentOrganisationReference:
          description: Parent Organisation Reference
          maxLength: 65535
          type: string
        Postcode:
          description: Postcode
          maxLength: 40
          type: string
        RegisteredName:
          maxLength: 255
          type: string
        RegistrationId:
          description: Registered ID for the organisation i.e. Legal Entity identifier
            number
          maxLength: 40
          type: string
        RegistrationNumber:
          description: Company registration number from company register i.e. Companies
            House registration number
          maxLength: 255
          type: string
        RequiresParticipantTermsAndConditionsSigning:
          description: true - this organisation requires terms and conditions to be
            signed. false - this organisation does not require terms and conditions
            to be signed
          type: boolean
        Size:
          description: Size of the organisation
          maxLength: 255
          type: string
        Status:
          default: Active
          description: Status of the directory registration of an organisation
          enum:
          - Active
          - Pending
          - Withdrawn
          type: string
        Tags:
          description: Tags to describe or classify an organisation
          items:
            type: string
          type: array
      type: object
    OrganisationAdminUser:
      properties:
        DomainRoleDetails:
          items:
            $ref: '#/components/schemas/DomainRoleDetail'
          type: array
        Status:
          description: Is the admin user active
          enum:
          - Active
          - Inactive
          type: string
        UserEmail:
          description: User's email address
          type: string
      type: object
    OrganisationAdminUsers:
      items:
        $ref: '#/components/schemas/OrganisationAdminUser'
      type: array
    OrganisationAuthorisationId:
      description: Unique ID associated with authorisations for organisation's authority
        claims
      maxLength: 40
      minLength: 1
      type: string
    OrganisationAuthorityClaim:
      properties:
        AuthorisationDomain:
          description: Authorisation Domain for the authority
          maxLength: 30
          type: string
        Authorisations:
          items:
            properties:
              MemberState:
                description: Abbreviated states information i.e. GB, IE, NL etc
                maxLength: 2
                type: string
              Status:
                default: Active
                description: Is this authorsation Active/Inactive
                enum:
                - Active
                - Inactive
                type: string
            type: object
          type: array
        AuthorityId:
          $ref: '#/components/schemas/AuthorityId'
        OrganisationAuthorityClaimId:
          $ref: '#/components/schemas/OrganisationAuthorityClaimId'
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        RegistrationId:
          description: Registration ID for the organisation
          maxLength: 40
          type: string
        Role:
          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII
          maxLength: 30
          type: string
        Status:
          default: Active
          description: Is this software statement Active/Inactive
          enum:
          - Active
          - Inactive
          type: string
        UniqueTechnicalIdenifier:
          items:
            maxLength: 255
            type: string
          type: array
      type: object
    OrganisationAuthorityClaimAuthorisation:
      properties:
        MemberState:
          description: Abbreviated states information i.e. GB, IE, NL etc
          maxLength: 10
          type: string
        OrganisationAuthorisationId:
          $ref: '#/components/schemas/OrganisationAuthorisationId'
        OrganisationAuthorityClaimId:
          $ref: '#/components/schemas/OrganisationAuthorityClaimId'
        Status:
          default: Active
          description: Is this authority claim Active/Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    OrganisationAuthorityClaimAuthorisationRequest:
      properties:
        MemberState:
          description: Abbreviated states information i.e. GB, IE, NL etc
          maxLength: 10
          minLength: 2
          type: string
          x-required-message: MemberState must be provided
        Status:
          default: Active
          description: Is this Active/Inactive - default is Active
          enum:
          - Active
          - Inactive
          type: string
          x-required-message: Status must be provided
      required:
      - Status
      - MemberState
      type: object
    OrganisationAuthorityClaimAuthorisations:
      items:
        $ref: '#/components/schemas/OrganisationAuthorityClaimAuthorisation'
      type: array
    OrganisationAuthorityClaimId:
      description: Unique ID associated with the authority claims
      maxLength: 40
      minLength: 1
      type: string
    OrganisationAuthorityClaimRequest:
      properties:
        AuthorisationDomain:
          description: Authorisation domain for the authority
          maxLength: 30
          minLength: 1
          type: string
          x-required-message: AuthorisationDomain must be provided
        AuthorityId:
          $ref: '#/components/schemas/AuthorityId'
        RegistrationId:
          description: Registration ID for the organisation
          maxLength: 40
          minLength: 1
          type: string
          x-required-message: RegistrationId must be provided
        Role:
          description: Role for the authority
          maxLength: 30
          minLength: 1
          type: string
          x-required-message: Role must be provided
        Status:
          default: Active
          description: Is this authority claim Active/Inactive, default is Active
          enum:
          - Active
          - Inactive
          type: string
          x-required-message: Status must be provided
        UniqueTechnicalIdenifier:
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - RegistrationId
      - Status
      - AuthorisationDomain
      - AuthorityId
      - Role
      type: object
    OrganisationAuthorityClaims:
      items:
        $ref: '#/components/schemas/OrganisationAuthorityClaim'
      type: array
    OrganisationAuthorityDomainClaim:
      properties:
        AuthorisationDomainName:
          description: The authorisation domain name
          type: string
        AuthorityId:
          description: The GUID of the Authority
          type: string
        AuthorityName:
          description: The name of the Authority
          type: string
        OrganisationAuthorityDomainClaimId:
          description: The unique org authority domain claim ID
          type: string
        RegistrationId:
          description: The registration ID
          type: string
        Status:
          default: Active
          description: Is this user Active or Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    OrganisationAuthorityDomainClaimId:
      description: Organisation Authority Domain Claim ID
      maxLength: 50
      type: string
    OrganisationAuthorityDomainClaimRequest:
      properties:
        AuthorisationDomainName:
          description: The authorisation domain name
          minLength: 1
          type: string
          x-required-message: The authorisation domain name is mandatory
        AuthorityId:
          description: The Authority ID
          minLength: 1
          type: string
          x-required-message: The Authority ID is mandatory
        RegistrationId:
          description: The registration ID
          type: string
      required:
      - AuthorityId
      - AuthorisationDomainName
      type: object
    OrganisationAuthorityDomainClaimUpdateRequest:
      properties:
        AuthorisationDomainName:
          description: The authorisation domain name
          minLength: 1
          type: string
          x-required-message: The authorisation domain name is mandatory
        AuthorityId:
          description: The GUID of the Authority
          type: string
        AuthorityName:
          description: The name of the Authority
          type: string
        RegistrationId:
          description: The registration ID
          type: string
        Status:
          description: Is this claim Active or Inactive
          type: string
      required:
      - AuthorityId
      - Status
      - AuthorityName
      - AuthorisationDomainName
      type: object
    OrganisationAuthorityDomainClaims:
      items:
        $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'
      type: array
    OrganisationAuthorityDomainClaimsPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/OrganisationAuthorityDomainClaim'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    OrganisationCertificateType:
      default: rtsseal
      enum:
      - qwac
      - qseal
      - rtswac
      - rtsseal
      - brseal
      - brseal_ext
      type: string
    OrganisationConformanceTest:
      properties:
        ApiFamilyType:
          description: The family type of the resource url to be tested (for example
            channels_branches)
          type: string
          x-required-message: The ApiFamilyType must be provided
        ResourceUrl:
          description: The url of the API to be tested (for example, https://matls-api.mockbank.poc.raidiam.io/open-banking/products-services/v1/personal-accounts)
          type: string
          x-required-message: The ResourceUrl must be provided
      required:
      - ResourceUrl
      - ApiFamilyType
      type: object
    OrganisationConformanceTestResult:
      description: a JSON response with the result of the test
      properties:
        result:
          description: Boolean with the result of the execution of the Conformance
            Suite Test
          type: boolean
        testPlanUrl:
          description: URL of the published test plan result
          type: string
      type: object
    OrganisationEnrol:
      properties:
        ClientName:
          description: ORG name as per eIDAS certificate
          maxLength: 255
          minLength: 1
          x-required-message: ClientName must be provided
        ClientUri:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: ClientUri must be in a URI format https://... or http://...
          x-required-message: ClientUri must be provided
        GrantTypes:
          items:
            maxLength: 40
            minLength: 1
            type: string
          type: array
          x-required-message: GrantTypes must be provided
        LogoUri:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: LogoUri must be in a URI format https://... or http://...
          x-required-message: LogoUri must be provided
        PolicyUri:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: PolicyUri must be in a URI format https://... or http://...
          x-required-message: PolicyUri must be provided
        RedirectUris:
          items:
            description: A compliant URI
            format: uri
            pattern: ^(https:\/\/).*
            type: string
            x-pattern-message: RedirectUris must be in a URI format https://...
            x-required-message: RedirectUris must be provided
          type: array
        ResponseTypes:
          items:
            maxLength: 40
            minLength: 1
            type: string
          type: array
          x-required-message: ResponseTypes must be provided
        Scope:
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: Scope must be provided
        TokenEndpointAuthMethod:
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: TokenEndpointAuthMethod must be provided
        TosUri:
          description: A compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: TosUri must be in a URI format https://... or http://...
          x-required-message: TosUri must be provided
      required:
      - RedirectUris
      - TokenEndpointAuthMethod
      - GrantTypes
      - ResponseTypes
      - ClientName
      - ClientUri
      - LogoUri
      - Scope
      - TosUri
      - PolicyUri
      type: object
    OrganisationEnrolments:
      description: A JSON object DCR response returned when client gets created.
      items:
        properties:
          ClientName:
            description: ORG name as per eIDAS certificate
            maxLength: 255
            type: string
          ClientSecret:
            description: Client secret generated by Directory
            maxLength: 255
            type: string
          ClientUri:
            description: A compliant URI string of a web page providing information
              about the client
            format: uri
            maxLength: 255
            pattern: ^(http:\/\/|https:\/\/).*
            type: string
            x-pattern-message: ClientUri must be in a URI format https://... or http://...
          GrantTypes:
            items:
              maxLength: 40
              type: string
            type: array
          Jwks:
            description: Client's JSON Web Key Set [RFC7517] document value
            maxLength: 255
            type: object
          JwksUri:
            description: A compliant URI string referencing the client's JSON Web
              Key (JWK) Set
            format: uri
            maxLength: 255
            pattern: ^(http:\/\/|https:\/\/).*
            type: string
            x-pattern-message: JwksUri must be in a URI format https://... or http://...
          LogoUri:
            description: A compliant URI
            format: uri
            maxLength: 255
            pattern: ^(http:\/\/|https:\/\/).*
            type: string
            x-pattern-message: LogoUri must be in a URI format https://... or http://...
          OrganisationId:
            $ref: '#/components/schemas/OrganisationId'
          PolicyUri:
            description: A compliant URI string that points to a human-readable privacy
              policy document
            format: uri
            maxLength: 255
            pattern: ^(http:\/\/|https:\/\/).*
            type: string
            x-pattern-message: PolicyUri must be in a URI format https://... or http://...
          RedirectUris:
            items:
              description: A compliant URI
              format: uri
              maxLength: 255
              pattern: ^(http:\/\/|https:\/\/).*
              type: string
              x-pattern-message: RedirectUris must be in a URI format https://...
                or http://...
            type: array
          ResponseTypes:
            items:
              maxLength: 40
              type: string
            type: array
          TokenEndpointAuthMethod:
            maxLength: 255
            type: string
          TosUri:
            description: A compliant URI string that points to a human-readable terms
              of service document for the client
            format: uri
            maxLength: 255
            pattern: ^(http:\/\/|https:\/\/).*
            type: string
            x-pattern-message: TosUri must be in a URI format https://... or http://...
        type: object
      type: array
    OrganisationExportOpenData:
      properties:
        AddressLine1:
          description: Address line 1
          maxLength: 255
          type: string
        AddressLine2:
          description: Address line 2
          maxLength: 255
          type: string
        AuthorisationServers:
          $ref: '#/components/schemas/AuthorisationServers'
        City:
          description: City
          maxLength: 255
          type: string
        CompanyRegister:
          description: Legal company register for the country, i.e. Companies House.
          maxLength: 255
          type: string
        Contacts:
          $ref: '#/components/schemas/Contacts'
        Country:
          description: Country
          maxLength: 255
          type: string
        CountryOfRegistration:
          description: Country of registration for the org
          maxLength: 255
          type: string
        CreatedOn:
          description: JSONDatetime of organisation creation.
          maxLength: 30
          type: string
        LegalEntityName:
          description: Legal Entity name for the org. Usually the same as org name
          maxLength: 255
          type: string
        OrgDomainClaims:
          $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'
        OrgDomainRoleClaims:
          $ref: '#/components/schemas/OrganisationAuthorityClaims'
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        OrganisationName:
          description: Name of the organisation.
          maxLength: 255
          type: string
        ParentOrganisationReference:
          description: Parent Organisation Reference
          maxLength: 65535
          type: string
        Postcode:
          description: Postcode
          maxLength: 40
          type: string
        RegisteredName:
          maxLength: 255
          type: string
        RegistrationId:
          description: Registered ID for the organisation i.e. Legal Entity identifier
            number
          maxLength: 40
          type: string
        RegistrationNumber:
          description: Company registration number from company register i.e. Companies
            House registration number
          maxLength: 255
          type: string
        Size:
          description: Size of an organisation
          maxLength: 255
          type: string
        Status:
          default: Active
          description: Status of the directory registration of an organisation
          enum:
          - Active
          - Pending
          - Withdrawn
          type: string
        Tag:
          description: Label to describe an organisation
          maxLength: 255
          type: string
      type: object
    OrganisationId:
      description: Unique ID associated with the organisation
      maxLength: 40
      minLength: 1
      type: string
    OrganisationRequest:
      properties:
        AddressLine1:
          description: Address line 1
          maxLength: 255
          minLength: 5
          type: string
          x-required-message: AddressLine1 must be provided
        AddressLine2:
          description: Address line 2
          maxLength: 255
          type: string
        City:
          description: City
          maxLength: 255
          minLength: 2
          type: string
          x-required-message: City must be provided
        CompanyRegister:
          description: Legal company register for the country, i.e. Companies House
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: CompanyRegister must be provided
        Country:
          description: Country
          maxLength: 255
          minLength: 2
          type: string
          x-required-message: Country must be provided
        CountryOfRegistration:
          description: Country of registration for the org
          maxLength: 255
          minLength: 2
          type: string
          x-required-message: CountryOfRegistration must be provided
        LegalEntityName:
          description: Legal Entity name for the org. Usually the same as org name
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: LegalEntityName must be provided
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        OrganisationName:
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: OrganisationName must be provided
        ParentOrganisationReference:
          description: Parent Organisation Reference
          maxLength: 65535
          type: string
        Postcode:
          description: Postcode
          maxLength: 40
          minLength: 3
          type: string
          x-required-message: Postcode must be provided
        RegisteredName:
          description: Registered legal name
          maxLength: 255
          type: string
        RegistrationId:
          description: Registered ID for the organisation i.e. Legal Entity identifier
            number
          maxLength: 40
          type: string
        RegistrationNumber:
          description: Company registration number from company register i.e. Companies
            House registration number
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: RegistrationNumber must be provided
        RequiresParticipantTermsAndConditionsSigning:
          default: true
          description: Participant Terms and Conditions Signing Required
          type: boolean
        Size:
          description: Size of the organisation
          maxLength: 255
          type: string
        Status:
          default: Active
          description: Status of the directory registration of an organisation
          enum:
          - Active
          - Pending
          - Withdrawn
          type: string
        Tags:
          description: Tags to describe or classify an organisation
          items:
            type: string
          type: array
      required:
      - OrganisationId
      - OrganisationName
      - CountryOfRegistration
      - CompanyRegister
      - RegistrationNumber
      - LegalEntityName
      - AddressLine1
      - City
      - Postcode
      - Country
      type: object
    OrganisationRoles:
      properties:
        OrgDomainClaims:
          items:
            properties:
              AuthorisationDomainName:
                description: The authorisation domain name
                type: string
              Status:
                description: Is this user Active or Inactive
                enum:
                - Active
                - Inactive
                type: string
            type: object
          type: array
        OrgDomainRoleClaims:
          items:
            properties:
              AuthorisationDomainName:
                description: The authorisation domain name
                type: string
              AuthorisationDomainRoleName:
                description: The authorisation domain name
                type: string
              Status:
                description: Is this user Active or Inactive
                enum:
                - Active
                - Inactive
                type: string
            type: object
          type: array
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        ParentOrganisationReference:
          description: Parent Organisation Reference
          type: string
        RegisteredName:
          type: string
        RegistrationNumber:
          description: Company registration number from company register i.e. Companies
            House registration number
          type: string
        Status:
          default: Active
          description: Status of the directory registration of an organisation
          enum:
          - Active
          - Pending
          - Withdrawn
          type: string
      type: object
    OrganisationSnapshot:
      properties:
        AuthorisationServers:
          $ref: '#/components/schemas/AuthorisationServers'
        Contacts:
          $ref: '#/components/schemas/Contacts'
        OrgDomainClaims:
          $ref: '#/components/schemas/OrganisationAuthorityDomainClaims'
        OrgDomainRoleClaims:
          $ref: '#/components/schemas/OrganisationAuthorityClaims'
        OrganisationCertificates:
          $ref: '#/components/schemas/CertificatesOrKeys'
        OrganisationDetails:
          $ref: '#/components/schemas/Organisation'
        SoftwareStatements:
          additionalProperties:
            properties:
              SoftwareAuthorityClaims:
                $ref: '#/components/schemas/SoftwareAuthorityClaims'
              SoftwareCertificates:
                $ref: '#/components/schemas/CertificatesOrKeys'
              SoftwareDetails:
                $ref: '#/components/schemas/SoftwareStatement'
            type: object
      type: object
    OrganisationSnapshotPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/OrganisationSnapshot'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    OrganisationUpdateRequest:
      properties:
        AddressLine1:
          description: Address line 1
          maxLength: 255
          minLength: 5
          type: string
          x-required-message: AddressLine1 must be provided
        AddressLine2:
          description: Address line 2
          maxLength: 255
          type: string
        City:
          description: City
          maxLength: 255
          minLength: 2
          type: string
          x-required-message: City must be provided
        CompanyRegister:
          description: Legal company register for the country, i.e. Companies House
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: CompanyRegister must be provided
        Country:
          description: Country
          maxLength: 255
          minLength: 2
          type: string
          x-required-message: Country must be provided
        CountryOfRegistration:
          description: Country of registration for the org
          maxLength: 255
          minLength: 2
          type: string
          x-required-message: CountryOfRegistration must be provided
        LegalEntityName:
          description: Legal Entity name for the org. Usually the same as org name
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: LegalEntityName must be provided
        OrganisationName:
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: OrganisationName must be provided
        ParentOrganisationReference:
          description: Parent Organisation Reference
          maxLength: 65535
          type: string
        Postcode:
          description: Postcode
          maxLength: 40
          minLength: 3
          type: string
          x-required-message: Postcode must be provided
        RegisteredName:
          description: Registered legal name
          maxLength: 255
          type: string
        RegistrationId:
          description: Registered ID for the organisation i.e. Legal Entity identifier
            number
          maxLength: 40
          type: string
        RegistrationNumber:
          description: Company registration number from company register i.e. Companies
            House registration number
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: RegistrationNumber must be provided
        RequiresParticipantTermsAndConditionsSigning:
          default: true
          description: Participant Terms and Conditions Signing Required
          type: boolean
        Size:
          description: Size of the organisation
          maxLength: 255
          type: string
        Status:
          default: Pending
          description: Status of the directory registration of an organisation
          enum:
          - Active
          - Pending
          - Withdrawn
          type: string
        Tags:
          description: Tags to describe or classify an organisation
          items:
            type: string
          type: array
      required:
      - OrganisationName
      - CountryOfRegistration
      - CompanyRegister
      - RegistrationNumber
      - LegalEntityName
      - AddressLine1
      - City
      - Postcode
      - Country
      type: object
    OrganisationWithTnc:
      properties:
        OrgDetails:
          $ref: '#/components/schemas/Organisation'
        TncDetails:
          properties:
            TnCSigned:
              description: true - the terms and conditions have been signed. false
                - the terms and conditions have not been signed
              type: boolean
            TnCUpdated:
              description: true - attached signer template has been updated. false
                - no tnc present/not updated
              type: boolean
            TnCsToBeSigned:
              $ref: '#/components/schemas/TnCsToBeSigned'
          type: object
      type: object
    OrganisationsExportOpenData:
      items:
        $ref: '#/components/schemas/OrganisationExportOpenData'
      type: array
    OrganisationsPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/Organisation'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    OrganisationsRoles:
      items:
        $ref: '#/components/schemas/OrganisationRoles'
      type: array
    OrganisationsSnapshot:
      additionalProperties:
        $ref: '#/components/schemas/OrganisationSnapshot'
      type: object
    Pageable:
      properties:
        number:
          description: Page number
          type: integer
        offset:
          description: Offset
          type: integer
        size:
          description: Size of the page
          type: integer
        sort:
          $ref: '#/components/schemas/Sort'
        sorted:
          description: Is the page sorted
          type: boolean
      type: object
    PageableRequest:
      example:
        page: 0
        size: 2
        sort: status,desc
      properties:
        page:
          description: Page index starts from 0
          minimum: 0
          type: integer
        size:
          description: This sets the page size
          maximum: 50000
          minimum: 1
          type: integer
        sort:
          description: Used to sort based on Model Parameters
          type: string
      type: object
    SoftwareAuthorityClaim:
      properties:
        AuthorisationDomain:
          description: Authorisation domain for the authority
          maxLength: 30
          type: string
        Role:
          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII
          maxLength: 10
          type: string
        SoftwareAuthorityClaimId:
          $ref: '#/components/schemas/SoftwareAuthorityClaimId'
        SoftwareStatementId:
          $ref: '#/components/schemas/SoftwareStatementId'
        Status:
          default: Active
          description: Is this authority claim Active/Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    SoftwareAuthorityClaimId:
      description: Unique ID associated with the authority claims for a software statement
      maxLength: 40
      minLength: 1
      type: string
    SoftwareAuthorityClaimRequest:
      properties:
        AuthorisationDomain:
          description: Authorisation domain for the authority
          maxLength: 30
          minLength: 1
          type: string
          x-required-message: AuthorisationDomain must be provided
        Role:
          description: Roles for the Authority i.e. ASPSP, AISP, PISP, CBPII
          maxLength: 30
          minLength: 1
          type: string
          x-required-message: Role must be provided
        Status:
          default: Active
          description: Is this authority claim Active/Inactive, default is active
          enum:
          - Active
          - Inactive
          type: string
          x-required-message: Status must be provided
      required:
      - Status
      - AuthorisationDomain
      - Role
      type: object
    SoftwareAuthorityClaimUpdateRequest:
      properties:
        Status:
          default: Active
          description: This is used to set the status - Active/Inactive
          enum:
          - Active
          - Inactive
          type: string
          x-required-message: Status must be provided
      required:
      - Status
      type: object
    SoftwareAuthorityClaims:
      items:
        $ref: '#/components/schemas/SoftwareAuthorityClaim'
      type: array
    SoftwareStatement:
      properties:
        AdditionalSoftwareMetadata:
          description: Extra metadata defined by the org admins to be loaded into
            the software statement and made avaiable during introspection
          maxLength: 255
          type: string
        ClientId:
          description: Software Statement client Id
          maxLength: 40
          type: string
        ClientName:
          description: Software Statement client name
          maxLength: 255
          type: string
        ClientUri:
          description: The Software Statement client compliant URI
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: ClientUri must be in a URI format https://... or http://...
        Description:
          description: Software Statement description
          maxLength: 255
          type: string
        Environment:
          description: The additional check for software statement, this field can
            avoid
          maxLength: 40
          type: string
        Locked:
          description: Flag shows if assertion has been generated on the software
            statement - will be set to true when assertion is generated
          type: boolean
        LogoUri:
          description: The Software Statement logo compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: LogoUri must be in a URI format https://... or http://...
        Mode:
          default: Live
          description: Software Statement mode
          enum:
          - Live
          - Test
          maxLength: 8
          type: string
        OnBehalfOf:
          description: A reference to fourth party organisation resource on the RTS
            Directory if the registering Org is acting on behalf of another
          maxLength: 255
          type: string
        OrganisationId:
          $ref: '#/components/schemas/OrganisationId'
        PolicyUri:
          description: The Software Statement policy compliant URI
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: PolicyUri must be in a URI format https://... or http://...
        RedirectUri:
          description: The Software Statement redirect compliant URI
          items:
            format: uri
            pattern: ^(http:\/\/|https:\/\/).*
            type: string
            x-pattern-message: RedirectUri must be in a URI format https://... or
              http://...
          maxLength: 255
          type: array
        RtsClientCreated:
          description: Client created flag
          type: boolean
        SoftwareStatementId:
          $ref: '#/components/schemas/SoftwareStatementId'
        Status:
          default: Active
          description: Is this software statement Active/Suspended/Inactive
          enum:
          - Active
          - Suspended
          - Inactive
          type: string
        TermsOfServiceUri:
          description: The Software Statement terms of service compliant URI
          format: uri
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: TermsOfServiceUri must be in a URI format https://...
            or http://...
        Version:
          description: Software Statement version as provided by the organisation's
            PTC
          maxLength: 40
          type: number
      type: object
    SoftwareStatementAssertion:
      description: A signed JWT (JWS)
      maxLength: 4000
      type: string
    SoftwareStatementCertificateOrKeyType:
      default: rtssigning
      enum:
      - rtstransport
      - rtssigning
      - sigkey
      - enckey
      - brcac
      - brcac_ext
      type: string
    SoftwareStatementId:
      description: Unique Software Statement Id
      maxLength: 40
      type: string
    SoftwareStatementRequest:
      properties:
        AdditionalSoftwareMetadata:
          description: Extra metadata defined by the org admins to be loaded into
            the software statement and made avaiable during introspection
          maxLength: 255
          type: string
        ClientName:
          description: Software Statement client name
          maxLength: 255
          minLength: 1
          type: string
          x-required-message: ClientName must be provided
        ClientUri:
          description: The Software Statement compliant client URI
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: ClientUri must be in a URI format https://... or http://...
          x-required-message: ClientUri must be provided
        Description:
          description: Software Statement description
          maxLength: 255
          type: string
        Environment:
          description: The additional check for software statement, this field can
            avoid environment checks.
          maxLength: 40
          type: string
        LogoUri:
          description: The Software Statement compliant logo URI
          maxLength: 255
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: LogoUri must be in a URI format https://... or http://...
          x-required-message: LogoUri must be provided
        Mode:
          default: Live
          description: The additional check to see if the environment reflected above
            is live or test.
          enum:
          - Live
          - Test
          type: string
        OnBehalfOf:
          description: A reference to fourth party organisation resource on the RTS
            Directory if the registering Org is acting on behalf of another
          maxLength: 255
          type: string
        PolicyUri:
          description: The Software Statement compliant policy URI
          maxLength: 255
          nullable: true
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: PolicyUri must be in a URI format https://... or http://...
        RedirectUri:
          description: The Software Statement redirect URIs
          items:
            description: A compliant URI
            maxLength: 255
            pattern: ^(https:\/\/).*
            type: string
            x-pattern-message: RedirectUri must be in a URI format https://...
          type: array
          x-required-message: RedirectUri must be provided
        TermsOfServiceUri:
          description: The Software Statement terms of service compliant URI
          maxLength: 255
          nullable: true
          pattern: ^(http:\/\/|https:\/\/).*
          type: string
          x-pattern-message: TermsOfServiceUri must be in a URI format https://...
            or http://...
        Version:
          description: Software Statement version as provided by the organisation's
            PTC
          maximum: 40
          minimum: 1
          type: number
          x-required-message: Version must be provided
      required:
      - ClientName
      - ClientUri
      - LogoUri
      - RedirectUri
      - Version
      type: object
    SoftwareStatementUpdateRequest:
      allOf:
      - $ref: '#/components/schemas/SoftwareStatementRequest'
      - properties:
          Status:
            default: Active
            description: Should this software statement be active or suspended?
            enum:
            - Active
            - Suspended
            type: string
        type: object
    SoftwareStatements:
      description: The list of Software Statements
      items:
        $ref: '#/components/schemas/SoftwareStatement'
      type: array
    Sort:
      properties:
        orderBy:
          items:
            properties:
              ascending:
                description: Whether ascending
                type: boolean
              direction:
                description: Direction of sort, i.e. ascending or descending
                enum:
                - ASC
                - DESC
                type: string
              ignoreCase:
                description: Was the case ignored
                type: boolean
              property:
                description: Name of the property used for sorting
                example: createdAt
                type: string
            type: object
          type: array
        sorted:
          type: boolean
      type: object
    StatusEnum:
      enum:
      - Active
      - Inactive
      type: string
    SuperUser:
      properties:
        Email:
          description: The super user email address
          type: string
        Status:
          default: Active
          description: Is this super user Active or Inactive
          enum:
          - Active
          - Inactive
          type: string
      type: object
    SuperUserCreationRequest:
      properties:
        Email:
          description: The super user email address
          minLength: 1
          type: string
          x-required-message: The super user email address is mandatory
      required:
      - Email
      type: object
    SuperUsers:
      items:
        $ref: '#/components/schemas/SuperUser'
      type: array
    SystemEnum:
      description: The system to which the domain user belongs to
      enum:
      - Directory
      - Service Desk
      - Dispute Resolution
      - Portal
      - Centralized Platform
      type: string
    TermsAndConditionsDetail:
      description: TnC details Parent
      properties:
        ExternalSigningServiceEnvelopeId:
          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeId'
        ExternalSigningServiceEnvelopePasscode:
          description: Access code for the specifier to fill in the signer details.
            This will be populated only once, when signing is initiated
          type: string
        ExternalSigningServiceEnvelopeStatus:
          $ref: '#/components/schemas/ExternalSigningServiceEnvelopeStatus'
        InititatedDate:
          description: Terms and Conditions initiated date
          maxLength: 255
          type: string
        TermsAndConditionsItem:
          $ref: '#/components/schemas/TermsAndConditionsItem'
      type: object
    TermsAndConditionsDetails:
      description: Details of TnC
      properties:
        RequiresSigning:
          description: Does the Directory TnC require signing
          type: boolean
        TermsAndConditionsItem:
          $ref: '#/components/schemas/TermsAndConditionsItem'
        Updated:
          description: Has the document updated since the user signed
          type: boolean
      type: object
    TermsAndConditionsItem:
      properties:
        Content:
          description: The MarkDown of the TnC
          minLength: 1
          type: string
          x-required-message: MarkDown must be provided
        ExternalSigningService:
          $ref: '#/components/schemas/ExternalSigningService'
        Name:
          description: The Name of the TnC
          minLength: 1
          type: string
          x-required-message: Name must be provided
        Status:
          description: Is the TnC Active or Inactive
          enum:
          - Active
          - Inactive
          type: string
        TnCId:
          description: Unique identifier for the Terms and Conditions Item
          readOnly: true
          type: integer
        Type:
          description: Role for which this TnC applies
          enum:
          - Participant
          - Directory
          type: string
          x-required-message: Type must be provided
      required:
      - Type
      - Content
      - Name
      type: object
    TermsAndConditionsPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/TermsAndConditionsItem'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    TermsAndConditionsUpdateRequest:
      properties:
        Content:
          description: The MarkDown of the TnC
          minLength: 1
          type: string
          x-required-message: MarkDown must be provided
        ExternalSigningService:
          $ref: '#/components/schemas/ExternalSigningService'
      required:
      - Content
      type: object
    TnCId:
      description: TnC unique identifier
      type: integer
    TnCsToBeSigned:
      items:
        $ref: '#/components/schemas/TermsAndConditionsItem'
      type: array
    UnlockSoftwareStatementRequest:
      properties:
        Unlock:
          description: Unlock Software Statement
          type: boolean
          x-required-message: Unlock equal to true must be provided
      type: object
    UserCreateRequest:
      properties:
        TermsAndConditionsId:
          description: Id of the TnC(type = Directory), user has agreed to
          type: integer
          x-required-message: User has to agree to Directory type TnC
        UserEmail:
          description: User's email
          pattern: ^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$
          type: string
          x-pattern-message: EmailAddress must be a valid email
      required:
      - UserEmail
      - FirstName
      - LastName
      - TermsAndConditionsId
      type: object
    UserDetail:
      properties:
        BasicInformation:
          properties:
            Status:
              enum:
              - Active
              - Inactive
              type: string
            UserEmail:
              type: string
          type: object
        CertificationManager:
          description: Is the user a certification manager
          type: boolean
        DirectoryTermsAndConditionsDetails:
          $ref: '#/components/schemas/TermsAndConditionsDetails'
        OrgAccessDetails:
          additionalProperties:
            $ref: '#/components/schemas/OrgAccessDetail'
          description: Map Key - OrgId, Map Value - Org Access Detail(containing info
            about org admin and domain role)
          type: object
        SuperUser:
          description: Is the user a super user
          type: boolean
        SystemUser:
          description: Is the user a system user
          type: boolean
      type: object
    UserEmailId:
      description: User email address
      maxLength: 50
      type: string
    UserOPInfo:
      description: The information contained within is subject to the scopes passed
        during token generation
      properties:
        address:
          description: Address
          type: string
        email:
          description: Email address
          type: string
        email_verified:
          description: Is the email verified
          type: boolean
        family_name:
          description: Family name
          type: string
        given_name:
          description: Given name
          type: string
        name:
          description: Full name
          type: string
        phone_number:
          description: Phone number
          type: string
        phone_number_verified:
          description: Is the phone number verified
          type: boolean
        sub:
          description: Contains the email address
          type: string
      type: object
    UserTermsAndConditionsPage:
      properties:
        content:
          items:
            $ref: '#/components/schemas/TermsAndConditionsDetail'
          type: array
        empty:
          type: boolean
        numberOfElements:
          type: integer
        offset:
          type: integer
        pageNumber:
          type: integer
        pageable:
          $ref: '#/components/schemas/Pageable'
        size:
          type: integer
        totalPages:
          type: integer
        totalSize:
          type: integer
      type: object
    UserUpdateRequest:
      properties:
        Status:
          $ref: '#/components/schemas/StatusEnum'
      type: object
    WebhookStatusResponse:
      properties:
        AuthorisationServerId:
          $ref: '#/components/schemas/AuthorisationServerId'
        WebhookStatus:
          $ref: '#/components/schemas/NotificationWebhookStatusEnum'
      type: object
    WebhookStatusResponses:
      items:
        $ref: '#/components/schemas/WebhookStatusResponse'
      type: array
    WellKnown:
      properties:
        acr_values_supported:
          items: {}
          type: array
        authorization_endpoint:
          description: REQUIRED. URL of the OP's OAuth 2.0 Authorization Endpoint
          type: string
        authorization_signing_alg_values_supported:
          items: {}
          type: array
        check_session_endpoint:
          type: string
        claim_types_supported:
          description: OPTIONAL. JSON array containing a list of the Claim Types that
            the OpenID Provider supports
          items: {}
          type: array
        claims_parameter_supported:
          description: OPTIONAL. Boolean value specifying whether the OP supports
            use of the claims parameter, with true indicating support. If omitted,
            the default value is false
          type: boolean
        claims_supported:
          description: RECOMMENDED. JSON array containing a list of the Claim Names
            of the Claims that the OpenID Provider MAY be able to supply values for
          items: {}
          type: array
        code_challenge_methods_supported:
          items: {}
          type: array
        end_session_endpoint:
          type: string
        frontchannel_logout_session_supported:
          type: boolean
        frontchannel_logout_supported:
          type: boolean
        grant_types_supported:
          description: OPTIONAL. JSON array containing a list of the OAuth 2.0 Grant
            Type values that this OP supports
          items: {}
          type: array
        id_token_signing_alg_values_supported:
          description: REQUIRED. JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the OP for the ID Token to encode the Claims
            in a JWT
          items: {}
          type: array
        introspection_endpoint:
          type: string
        introspection_endpoint_auth_methods_supported:
          items: {}
          type: array
        introspection_endpoint_auth_signing_alg_values_supported:
          items: {}
          type: array
        issuer:
          description: REQUIRED. URL using the https scheme with no query or fragment
            component that the OP asserts as its Issuer Identifier
          type: string
        jwks_uri:
          description: REQUIRED. URL of the OP's JSON Web Key Set [JWK] document.
          type: string
        pushed_authorization_request_endpoint:
          items: {}
          type: array
        registration_endpoint:
          description: RECOMMENDED. URL of the OP's Dynamic Client Registration Endpoint
          type: string
        request_object_signing_alg_values_supported:
          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the OP for Request Objects
          type: string
        request_parameter_supported:
          description: OPTIONAL. Boolean value specifying whether the OP supports
            use of the request parameter, with true indicating support. If omitted,
            the default value is false
          type: boolean
        request_uri_parameter_supported:
          description: OPTIONAL. Boolean value specifying whether the OP supports
            use of the request_uri parameter, with true indicating support. If omitted,
            the default value is true
          type: boolean
        require_request_uri_registration:
          description: OPTIONAL. Boolean value specifying whether the OP requires
            any request_uri values used to be pre-registered using the request_uris
            registration parameter
          type: boolean
        response_modes_supported:
          description: OPTIONAL. JSON array containing a list of the OAuth 2.0 response_mode
            values that this OP supports
          items: {}
          type: array
        response_types_supported:
          description: REQUIRED. JSON array containing a list of the OAuth 2.0 response_type
            values that this OP supports
          items: {}
          type: array
        revocation_endpoint:
          type: string
        revocation_endpoint_auth_methods_supported:
          items: {}
          type: array
        revocation_endpoint_auth_signing_alg_values_supported:
          items: {}
          type: array
        scopes_supported:
          description: RECOMMENDED. JSON array containing a list of the OAuth 2.0
            [RFC6749] scope values that this server supports
          items: {}
          type: array
        subject_types_supported:
          description: REQUIRED. JSON array containing a list of the Subject Identifier
            types that this OP supports
          items: {}
          type: array
        tls_client_certificate_bound_access_tokens:
          type: boolean
        token_endpoint:
          description: URL of the OP's OAuth 2.0 Token Endpoint
          type: string
        token_endpoint_auth_methods_supported:
          description: OPTIONAL. JSON array containing a list of Client Authentication
            methods supported by this Token Endpoint
          items: {}
          type: array
        token_endpoint_auth_signing_alg_values_supported:
          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms
            (alg values) supported by the Token Endpoint for the signature on the
            JWT
          items: {}
          type: array
        userinfo_endpoint:
          description: RECOMMENDED. URL of the OP's UserInfo Endpoint
          type: string
        userinfo_signing_alg_values_supported:
          description: OPTIONAL. JSON array containing a list of the JWS signing algorithms
            (alg values) [JWA] supported by the UserInfo Endpoint to encode the Claims
            in a JWT
          items: {}
          type: array
      type: object
    xFapiInteractionId:
      description: An RFC4122 UID used as a correlation id.
      example: 73cac523-d3ae-2289-b106-330a6218710d
      maxLength: 100
      minLength: 1
      pattern: ^[a-zA-Z0-9][a-zA-Z0-9\-]{0,99}$
      type: string
  securitySchemes:
    authorizer:
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authorizer:
        authorizerResultTtlInSeconds: 300
        authorizerUri: ${authorizer_invoke_arn}
        identitySource: method.request.header.Authorization
        type: request
      x-amazon-apigateway-authtype: custom
    oAuth:
      description: This API uses OAUTH 2.0 with client creds for the admin role and
        auth code for web users
      flows:
        authorizationCode:
          authorizationUrl: https://auth.openbanking.raidiam.io/auth
          refreshUrl: https://auth.openbanking.raidiam.io/token
          scopes:
            directory:website: Web based operations
          tokenUrl: https://auth.openbanking.raidiam.io/token
        clientCredentials:
          scopes:
            directory:admin: All operations for super and domain users
            directory:software: Software statement client operations
          tokenUrl: https://auth.openbanking.raidiam.io/token
      type: oauth2
